{"version":3,"file":"static/js/736.87b0517f.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Profile/MySales/MySales.module.scss?fad3","components/Profile/MySales/MySales.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ordersWrapper\":\"MySales_ordersWrapper__zezf+\",\"ordersList\":\"MySales_ordersList__s6tus\",\"orderItem\":\"MySales_orderItem__l-5wO\",\"orderInfoWrapper\":\"MySales_orderInfoWrapper__rgdFU\",\"orderInfoItem\":\"MySales_orderInfoItem__zGXXl\",\"orderSum\":\"MySales_orderSum__MPLUJ\",\"orderBottomWrapper\":\"MySales_orderBottomWrapper__P6Du2\",\"waitingPhrase\":\"MySales_waitingPhrase__o59Sm\",\"message\":\"MySales_message__x8quZ\",\"buttonTrashWrapper\":\"MySales_buttonTrashWrapper__Pmv-o\",\"messageWindow\":\"MySales_messageWindow__BmH+V\",\"dismissButton\":\"MySales_dismissButton__9iaeT\",\"buttonBottomWrapper\":\"MySales_buttonBottomWrapper__nRbFL\",\"btnLight\":\"MySales_btnLight__XU4y4\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserSales, updateOrderStatus } from 'redux/order/order-operations';\nimport {\n  getLoadingOrders,\n  selectUserSales,\n  selectUserSalesTotalPages,\n} from 'redux/order/order-selectors';\nimport { getID } from 'redux/auth/auth-selectors';\nimport { selectUserReviews } from 'redux/review/review-selectors';\nimport { getUserReviews } from 'redux/review/review-operations';\nimport { orderConfirmationDialogue } from 'redux/dialogue/dialogue-operations';\n\nimport OrderProductsList from 'components/Shared/OrderProductsList/OrderProductsList';\nimport Pagination from 'components/Shared/Pagination/Pagination';\nimport Button from 'components/Shared/Button/Button';\nimport OrderStatusList from 'components/Shared/OrderStatusList/OrderStatusList';\nimport FeedbackWindow from 'components/Shared/FeedbackWindow/FeedbackWindow';\nimport Dialogue from 'components/Dialogue/Dialogue';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport s from './MySales.module.scss';\n\nconst MySales = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLoadingOrders);\n  const userId = useSelector(getID);\n  const userSales = useSelector(selectUserSales);\n  const totalPages = useSelector(selectUserSalesTotalPages);\n  const myReview = useSelector(selectUserReviews);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentSelector, setcurrentSelector] = useState('all');\n  const [isFeedbackWindowOpen, setIsFeedbackWindowOpen] = useState(false);\n  const [orderToFeedbackWindow, setOrderToFeedbackWindow] = useState({});\n  const [isMessage, setIsMessage] = useState(false);\n  const [productId, setProductId] = useState(null);\n  const [customerId, setCustomerId] = useState(null);\n\n  useEffect(() => {\n    dispatch(getUserReviews({ userId }));\n  }, [dispatch, userId, orderToFeedbackWindow]);\n\n  useEffect(() => {\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [dispatch, currentPage, currentSelector]);\n\n  // for pagination\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleMessageClick = (product, customer) => {\n    setIsMessage(true);\n    setProductId(product);\n    setCustomerId(customer);\n  };\n\n  const handleDismissClick = () => {\n    setIsMessage(false);\n    setProductId(null);\n    setCustomerId(null);\n  };\n\n  const handleButtonClick = optionName => {\n    setcurrentSelector(optionName);\n    setCurrentPage(1);\n  };\n\n  const handleChangeOrderStatus = (id, confirmed, typeDialogue) => {\n    dispatch(\n      updateOrderStatus({\n        orderId: id,\n        confirmed: confirmed,\n        statusNew: false,\n      })\n    );\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    dispatch(\n      orderConfirmationDialogue({\n        orderId: id,\n        typeDialogue: typeDialogue,\n      })\n    );\n  };\n\n  const toggleIsOpen = (orderId, sellerId, productInfo, customerId) => {\n    if (orderId) {\n      setOrderToFeedbackWindow({ orderId, sellerId, productInfo, customerId });\n      setIsFeedbackWindowOpen(!isFeedbackWindowOpen);\n      return;\n    }\n    setOrderToFeedbackWindow({});\n    setIsFeedbackWindowOpen(!isFeedbackWindowOpen);\n  };\n\n  useEffect(() => {\n    document.body.style.overflow = isFeedbackWindowOpen ? 'hidden' : 'unset';\n  }, [isFeedbackWindowOpen]);\n  const filteredSales = userSales.filter(({ delivery }) => delivery !== \"\");\n  return (\n    <>\n      <div className={s.ordersWrapper}>\n        <OrderStatusList\n          currentSelector={currentSelector}\n          handleButtonClick={handleButtonClick}\n        />\n        {filteredSales.length > 0 && (\n          <ul className={s.ordersList}>\n            {filteredSales.map(\n              ({\n                _id,\n                orderSum,\n                orderDate,\n                orderNumber,\n                products,\n                productInfo,\n                client,\n                statusNew,\n                confirmed,\n                sellerId,\n              }) => {\n                const isBtnRewiewShown = myReview.find(\n                  ({ orderId }) => orderId === _id\n                );\n                return (\n                  <li className={s.orderItem} key={_id}>\n                    <div className={s.orderInfoWrapper}>\n                      <div className={s.orderInfoItem}>\n                        <p>Покупець:</p>\n                        <p>\n                          {client.customerSecondName} {client.customerFirstName}\n                        </p>\n                        <p>Номер телефону: {client.customerTel}</p>\n                      </div>\n                      <div className={s.orderInfoItem}>\n                        <p>Замовлення &#8470; {orderNumber}</p>\n                        <p>{orderDate}</p>\n                      </div>\n                    </div>\n                    <OrderProductsList\n                      productsForOrder={productInfo}\n                      products={products}\n                    />\n                    <div className={s.orderBottomWrapper}>\n                      {statusNew === true ? (\n                        <>\n                          <Button\n                            type=\"button\"\n                            btnClass=\"btnLight\"\n                            text=\"Підтвердити замовлення\"\n                            handleClick={() =>\n                              handleChangeOrderStatus(_id, true, 'sales')\n                            }\n                          />\n                          <Button\n                            type=\"button\"\n                            btnClass=\"btnDark\"\n                            text=\"Скасувати замовлення\"\n                            handleClick={() =>\n                              handleChangeOrderStatus(_id, false, 'cancel')\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p className={s.waitingPhrase}>\n                          {confirmed === true ? 'Підтверджено' : 'Скасовано'}\n                        </p>\n                      )}\n\n                      <p\n                        className={s.orderSum}\n                      >{`Сума замовлення: ${orderSum} грн.`}</p>\n                    </div>\n                    {statusNew === false && (\n                      <div className={s.buttonBottomWrapper}>\n                        <Button\n                          type=\"button\"\n                          btnClass=\"btnLight\"\n                          text=\"Питання покупцю\"\n                          handleClick={() =>\n                            handleMessageClick(\n                              products[0]._id,\n                              client.customerId\n                            )\n                          }\n                        />\n                        {!isBtnRewiewShown && (\n                          <Button\n                            btnClass=\"btnLight\"\n                            text=\"Залишити відгук\"\n                            handleClick={() =>\n                              toggleIsOpen(\n                                _id,\n                                sellerId,\n                                productInfo,\n                                client.customerId\n                              )\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                    {isFeedbackWindowOpen && (\n                      <FeedbackWindow\n                        hideWindow={toggleIsOpen}\n                        orderToFeedbackWindow={orderToFeedbackWindow}\n                        feedbackType={'asSeller'}\n                      />\n                    )}\n                  </li>\n                );\n              }\n            )}\n          </ul>\n        )}\n        {!isLoading && filteredSales.length === 0 && (\n          <p className={s.message}>Замовлень з таким статусом у вас ще немає</p>\n        )}\n      </div>\n      {totalPages > 1 && (\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n      {isMessage && (\n        <div className={s.messageWindow}>\n          <button className={s.dismissButton} onClick={handleDismissClick}>\n            <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n          </button>\n          <Dialogue\n            productInfo={{\n              _id: productId,\n              owner: userId,\n              customer: customerId,\n            }}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MySales;\n"],"names":["dispatch","useDispatch","isLoading","useSelector","getLoadingOrders","userId","getID","userSales","selectUserSales","totalPages","selectUserSalesTotalPages","myReview","selectUserReviews","useState","currentPage","setCurrentPage","currentSelector","setcurrentSelector","isFeedbackWindowOpen","setIsFeedbackWindowOpen","orderToFeedbackWindow","setOrderToFeedbackWindow","isMessage","setIsMessage","productId","setProductId","customerId","setCustomerId","useEffect","getUserReviews","getUserSales","page","selectorName","window","scrollTo","top","behavior","handleChangeOrderStatus","id","confirmed","typeDialogue","updateOrderStatus","orderId","statusNew","orderConfirmationDialogue","toggleIsOpen","sellerId","productInfo","document","body","style","overflow","filteredSales","filter","delivery","className","s","OrderStatusList","handleButtonClick","optionName","length","map","_id","orderSum","orderDate","orderNumber","products","client","isBtnRewiewShown","find","customerSecondName","customerFirstName","customerTel","OrderProductsList","productsForOrder","Button","type","btnClass","text","handleClick","product","customer","FeedbackWindow","hideWindow","feedbackType","Pagination","onPageChange","onClick","icon","faTimes","size","Dialogue","owner"],"sourceRoot":""}