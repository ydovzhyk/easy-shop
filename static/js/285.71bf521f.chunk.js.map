{"version":3,"file":"static/js/285.71bf521f.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Profile/MyPurchases/MyPurchases.module.scss?94f3","components/Profile/MyPurchases/MyPurchases.jsx","webpack://easy-shop/./src/components/Shared/OrderStatusList/OrderStatusList.module.scss?5552","components/Shared/OrderStatusList/OrderStatusList.jsx","webpack://easy-shop/./src/components/Shared/Pagination/Pagination.module.scss?dfd1","components/Shared/Pagination/Pagination.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ordersWrapper\":\"MyPurchases_ordersWrapper__vsq4G\",\"ordersList\":\"MyPurchases_ordersList__tC2k7\",\"orderItem\":\"MyPurchases_orderItem__vBofq\",\"orderInfoWrapper\":\"MyPurchases_orderInfoWrapper__UfCyV\",\"orderInfoItem\":\"MyPurchases_orderInfoItem__-VdP8\",\"orderSum\":\"MyPurchases_orderSum__ERXLf\",\"orderBottomWrapper\":\"MyPurchases_orderBottomWrapper__AikN3\",\"waitingPhrase\":\"MyPurchases_waitingPhrase__NhpV9\",\"btnLight\":\"MyPurchases_btnLight__gkeiQ\",\"message\":\"MyPurchases_message__5UQb3\"};","import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserOrders } from 'redux/order/order-operations';\nimport {\n  getLoadingOrders,\n  selectUserOrders,\n  selectUserOrdersTotalPages,\n} from 'redux/order/order-selectors';\nimport { getLogin } from 'redux/auth/auth-selectors';\n\nimport OrderProductsList from \"components/Shared/OrderProductsList/OrderProductsList\";\nimport Pagination from 'components/Shared/Pagination/Pagination';\nimport OrderStatusList from 'components/Shared/OrderStatusList/OrderStatusList';\nimport s from './MyPurchases.module.scss';\n\n\nconst MyShoppings = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(getLogin);\n  const isLoading = useSelector(getLoadingOrders);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentSelector, setcurrentSelector] = useState(\"all\");\n\n  useEffect(() => {\n    dispatch(\n      getUserOrders({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [dispatch, currentPage, currentSelector]);\n\n  const userOrders = useSelector(selectUserOrders);\n  const totalPages = useSelector(selectUserOrdersTotalPages);\n\n  // for pagination\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleButtonClick = optionName => {\n    setcurrentSelector(optionName);\n    setCurrentPage(1);\n  };\n  \n  return (\n    <>\n      <div className={s.ordersWrapper}>\n        <OrderStatusList\n          currentSelector={currentSelector}\n          handleButtonClick={handleButtonClick}\n        />\n        {userOrders.length > 0 && (\n          <ul className={s.ordersList}>\n            {userOrders.map(\n              ({\n                _id,\n                sellerName,\n                orderSum,\n                orderDate,\n                orderNumber,\n                products,\n                productInfo,\n                delivery,\n                statusNew,\n                confirmed,\n              }) => (\n                <li className={s.orderItem} key={_id}>\n                  <div className={s.orderInfoWrapper}>\n                    <div className={s.orderInfoItem}>\n                      <p>Продавець:</p>\n                      <p>{sellerName}</p>\n                    </div>\n                    <div className={s.orderInfoItem}>\n                      <p>Замовлення &#8470; {orderNumber}</p>\n                      <p>{orderDate}</p>\n                    </div>\n                  </div>\n                  <OrderProductsList\n                    productsForOrder={productInfo}\n                    products={products}\n                  />\n                  <div className={s.orderBottomWrapper}>\n                    {delivery !== '' && statusNew === true && (\n                      <p className={s.waitingPhrase}>Очікує підтвердження</p>\n                    )}\n                    {delivery === '' && statusNew === true && (\n                      <NavLink\n                        to={isLogin ? '/checkout' : '/login'}\n                        className={s.btnLight}\n                        state={{ orderId: _id }}\n                      >\n                        Оформити замовлення\n                      </NavLink>\n                    )}\n                    {statusNew === false && (\n                      <p className={s.waitingPhrase}>\n                        {confirmed === true ? 'Підтверджено' : 'Скасовано'}\n                      </p>\n                    )}\n\n                    <p\n                      className={s.orderSum}\n                    >{`Сума замовлення: ${orderSum} грн.`}</p>\n                  </div>\n                </li>\n              )\n            )}\n          </ul>\n        )}\n        {!isLoading && userOrders.length === 0 && (\n          <p className={s.message}>Замовлень з таким статусом у вас ще немає</p>\n        )}\n      </div>\n      {totalPages > 1 && (\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MyShoppings;","// extracted by mini-css-extract-plugin\nexport default {\"listBox\":\"OrderStatusList_listBox__YmcUi\",\"heading\":\"OrderStatusList_heading__zRkCM\",\"optionsList\":\"OrderStatusList_optionsList__G76gp\",\"selectButton\":\"OrderStatusList_selectButton__vMhds\",\"active\":\"OrderStatusList_active__Jcgt3\"};","import Select from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\nimport s from './OrderStatusList.module.scss';\n\nconst OrderStatusList = ({ currentSelector, handleButtonClick }) => {\n    const isTablet = useMediaQuery({ minWidth: 768 });\n  return (\n    <div className={s.listBox}>\n      <p className={s.heading}>За статусом</p>\n      {!isTablet && (\n        <Select\n          classNamePrefix=\"custom-select\"\n          onChange={value => handleButtonClick(value.value)}\n          options={[\n            { value: 'all', label: 'Всі' },\n            { value: 'new', label: 'Нові' },\n            { value: 'confirmed', label: 'Підтверджені' },\n            { value: 'canceled', label: 'Відхилені' },\n          ]}\n          defaultValue={{ value: 'all', label: 'Всі' }}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            // colors: {\n            //   ...theme.colors,\n            //   primary25: '#fbef35;',\n            //   primary: '#3b3b3b',\n            // },\n          })}\n        />\n      )}\n\n      {isTablet && (\n        <ul className={s.optionsList}>\n          <li>\n            <button\n              className={\n                currentSelector === 'all'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('all')}\n            >\n              Всі\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'new'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('new')}\n            >\n              Нові\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'confirmed'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('confirmed')}\n            >\n              Підтверджені\n            </button>\n          </li>\n          {/* <li>Виконані</li> */}\n          <li>\n            <button\n              className={\n                currentSelector === 'canceled'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('canceled')}\n            >\n              Відхилені\n            </button>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default OrderStatusList;\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationSection\":\"Pagination_paginationSection__1F1CP\",\"pagesSet\":\"Pagination_pagesSet__2tGzL\",\"pageBox\":\"Pagination_pageBox__Ti6uC\",\"active\":\"Pagination_active__yaPsQ\",\"btnLeft\":\"Pagination_btnLeft__Gnp4s\",\"btnRight\":\"Pagination_btnRight__O85qW\"};","import React from 'react';\n\nimport s from './Pagination.module.scss';\n\nconst Pagination = ({ totalPages, currentPage, onPageChange }) => {\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const displayRange = 2; // Кількість сторінок, які відображаються навколо поточної сторінки\n\n    let startPage = Math.max(1, currentPage - displayRange);\n    let endPage = Math.min(totalPages, currentPage + displayRange);\n\n    if (currentPage <= displayRange) {\n      endPage = Math.min(displayRange * 2 + 1, totalPages);\n    }\n\n    if (currentPage >= totalPages - displayRange) {\n      startPage = Math.max(totalPages - displayRange * 2, 1);\n    }\n\n    for (let page = startPage; page <= endPage; page++) {\n      pageNumbers.push(page);\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <div className={s.paginationSection}>\n      <button \n        className={`${s.btnLeft} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        &lt;\n      </button>\n      <div className={s.pagesSet}>\n        {getPageNumbers().map(page => (\n          <button\n            key={page}\n            onClick={() => onPageChange(page)}\n            className={currentPage === page ? s.active : s.pageBox}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n      <button\n        className={`${s.btnRight} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"names":["dispatch","useDispatch","isLogin","useSelector","getLogin","isLoading","getLoadingOrders","useState","currentPage","setCurrentPage","currentSelector","setcurrentSelector","useEffect","getUserOrders","page","selectorName","window","scrollTo","top","behavior","userOrders","selectUserOrders","totalPages","selectUserOrdersTotalPages","className","s","OrderStatusList","handleButtonClick","optionName","length","map","_id","sellerName","orderSum","orderDate","orderNumber","products","productInfo","delivery","statusNew","confirmed","OrderProductsList","productsForOrder","to","state","orderId","Pagination","onPageChange","isTablet","useMediaQuery","minWidth","classNamePrefix","onChange","value","options","label","defaultValue","theme","borderRadius","onClick","disabled","pageNumbers","startPage","Math","max","endPage","min","displayRange","push","getPageNumbers"],"sourceRoot":""}