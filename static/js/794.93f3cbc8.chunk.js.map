{"version":3,"file":"static/js/794.93f3cbc8.chunk.js","mappings":"gTACA,EAAuB,oBAAvB,EAAkD,oBAAlD,EAAoH,oBAApH,EAA8I,mBAA9I,EAAgL,4BAAhL,EAAoN,qBAApN,EAAoP,wBAApP,EAAyR,0BAAzR,EAA+T,yBAA/T,EAAmW,wB,SCsHnW,EArGc,WACZ,IAAMA,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAIjB,GAAyCC,EAAAA,EAAAA,IAAQ,CAC/CC,cAAe,CACbC,MAAO,GACPC,SAAU,MAHNC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAczBC,EACkB,WAAtBX,EAASY,SACL,0FACA,gJAEAC,EAAe,SAAC,GACpB,OADqC,EAAfC,SACP,UAAMC,EAAN,YAAoBA,GAAiBA,CACrD,EAED,GAAIjB,EACF,OAAO,SAAC,KAAD,CAAUkB,GAAG,MAOtB,OACE,oBAASC,UAAWF,EAApB,UACE,UAACG,EAAA,EAAD,YACE,iBAAKD,UAAWF,EAAhB,WACE,iBAAKE,UAAWF,EAAhB,WACE,SAAC,KAAD,CAASE,UAAWJ,EAAcG,GAAG,SAASG,KAAG,EAAjD,UACE,eAAIF,UAAWF,EAAf,yCAEF,SAAC,KAAD,CAASE,UAAWJ,EAAcG,GAAG,gBAArC,UACE,eAAIC,UAAWF,EAAf,gFAGJ,SAACK,EAAA,EAAD,CAAMC,UAAU,cAAcC,KAAMX,KACpC,eAAGY,KAAI,UA9CW,0CA8CX,WAAiCN,UAAWF,EAAnD,WACE,SAAC,MAAD,CAAUS,KAAM,KADlB,aAIA,kBAAMP,UAAWF,EAAQU,SAAUhB,GAzC1B,SAACiB,EAAMC,GACtBA,EAAEC,iBACF1B,GAAS2B,EAAAA,EAAAA,IAAMH,IACfhB,IACAR,GAAS4B,EAAAA,EAAAA,MACV,IAoCO,WACE,SAAC,KAAD,CACEtB,QAASA,EACTuB,KAAK,QACLC,MAAO,CACLC,UAAU,GAEZC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,SAACC,EAAA,GAAD,QACED,MAAOA,EACP7B,QAASA,EACT+B,aAAcH,GACVD,EAAAA,EAAAA,OALA,KASV,SAAC,KAAD,CACE3B,QAASA,EACTuB,KAAK,WACLC,MAAO,CAAEC,UAAU,EAAMO,UAAW,EAAGC,UAAW,IAClDP,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,SAACC,EAAA,GAAD,QACED,MAAOA,EACP7B,QAASA,EACT+B,aAAcH,GACVD,EAAAA,EAAAA,UALA,KASV,gBAAKlB,UAAWF,EAAhB,UACE,SAAC2B,EAAA,EAAD,CAAQpB,KAAK,uCAASqB,SAAS,mBAGnC,SAAC,KAAD,CAAM1B,UAAWF,EAAYC,GAAG,IAAhC,2IAIDrB,IACC,SAACiD,EAAA,EAAD,CAActB,KAAI,UAAK3B,GAAckD,UA3D1B,WACjB3C,GAAS4C,EAAAA,EAAAA,MACV,QA8DF,EC3GD,EARkB,WAChB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["webpack://easy-shop/./src/components/Login/Login.module.scss?4086","components/Login/Login.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__g0qS6\",\"wrap\":\"Login_wrap__i5y-C\",\"imgDesktop\":\"Login_imgDesktop__x7s8O\",\"auth\":\"Login_auth__X+fEr\",\"box\":\"Login_box__ff0SQ\",\"linksWrapper\":\"Login_linksWrapper__MWew3\",\"title\":\"Login_title__3JYIy\",\"authLink\":\"Login_authLink__fS+ge\",\"activeLink\":\"Login_activeLink__ChEi4\",\"googleBtn\":\"Login_googleBtn__bQy7S\",\"linkHome\":\"Login_linkHome__UtGlp\"};","import { useForm, Controller } from 'react-hook-form';\nimport { NavLink, Navigate, useLocation, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FcGoogle } from 'react-icons/fc';\n\nimport { clearNewUser, clearUserError } from 'redux/auth/auth-slice';\nimport { login } from 'redux/auth/auth-opetations';\nimport { getLogin, getError } from 'redux/auth/auth-selectors';\n\nimport Container from 'components/Shared/Container';\nimport ErrorMessage from 'components/Shared/ErrorMessage/ErrorMessage';\nimport Text from 'components/Shared/Text/Text';\nimport TextField from 'components/Shared/TextField';\nimport { field } from 'components/Shared/TextField/fields';\nimport Button from 'components/Shared/Button';\n\nimport s from './Login.module.scss';\n\nconst Login = () => {\n  const errorLogin = useSelector(getError);\n  const isLogin = useSelector(getLogin);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  // const REACT_APP_API_URL = 'http://localhost:4000';\n  const REACT_APP_API_URL = 'https://easy-shop-backend.herokuapp.com';\n\n  const { control, handleSubmit, reset } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    dispatch(login(data));\n    reset();\n    dispatch(clearNewUser());\n  };\n\n  const googleText =\n    location.pathname === '/login'\n      ? 'Увійти швидко з Google'\n      : 'Зареєструватись швидко з Google';\n\n  const getClassName = ({ isActive }) => {\n    return isActive ? `${s.authLink} ${s.activeLink}` : s.authLink;\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/\" />;\n  }\n\n  const resetError = () => {\n    dispatch(clearUserError());\n  };\n\n  return (\n    <section className={s.auth}>\n      <Container>\n        <div className={s.box}>\n          <div className={s.linksWrapper}>\n            <NavLink className={getClassName} to=\"/login\" end>\n              <h2 className={s.title}>Вхід</h2>\n            </NavLink>\n            <NavLink className={getClassName} to=\"/registration\">\n              <h2 className={s.title}>Реєстрація</h2>\n            </NavLink>\n          </div>\n          <Text textClass=\"google-text\" text={googleText} />\n          <a href={`${REACT_APP_API_URL}/google`} className={s.googleBtn}>\n            <FcGoogle size={24} />\n            Google\n          </a>\n          <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <Controller\n              control={control}\n              name=\"email\"\n              rules={{\n                required: true,\n              }}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  {...field.email}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"password\"\n              rules={{ required: true, minLength: 8, maxLength: 30 }}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  {...field.password}\n                />\n              )}\n            />\n            <div className={s.wrap}>\n              <Button text=\"Ввійти\" btnClass=\"btnLight\" />\n            </div>\n          </form>\n          <Link className={s.linkHome} to=\"/\">\n            Повернутися на головну\n          </Link>\n        </div>\n        {errorLogin && (\n          <ErrorMessage text={`${errorLogin}`} onDismiss={resetError} />\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Login;\n","import Login from 'components/Login';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <Login />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["errorLogin","useSelector","getError","isLogin","getLogin","location","useLocation","dispatch","useDispatch","useForm","defaultValues","email","password","control","handleSubmit","reset","googleText","pathname","getClassName","isActive","s","to","className","Container","end","Text","textClass","text","href","size","onSubmit","data","e","preventDefault","login","clearNewUser","name","rules","required","render","field","onChange","value","TextField","handleChange","minLength","maxLength","Button","btnClass","ErrorMessage","onDismiss","clearUserError"],"sourceRoot":""}