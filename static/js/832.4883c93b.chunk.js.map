{"version":3,"file":"static/js/832.4883c93b.chunk.js","mappings":"6MACA,EAAgC,uC,SC6ChC,EAlCwB,WAEtB,IAAMA,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GAC/BC,QAAQC,IAAI,iCAAkCJ,GAC9C,IAAMK,EAAeL,EAAWM,WAChCH,QAAQC,IAAI,mCAAoCC,GAGhD,OAA8CE,EAAAA,EAAAA,UAAS,OAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAOA,OAEE,+BACE,gBAAKC,UAAWC,EAAhB,UACE,SAACC,EAAA,EAAD,CACEJ,gBAAiBA,EACjBK,kBAXkB,SAAAC,GACxBL,EAAmBK,EAEpB,OAmBF,C,yFC3CD,EAA0B,iCAA1B,EAAqE,iCAArE,EAAoH,qCAApH,EAAwK,sCAAxK,EAAuN,gC,SCwFvN,EArFwB,SAAC,GAA4C,IAA1CN,EAAyC,EAAzCA,gBAAiBK,EAAwB,EAAxBA,kBAClCE,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAC7C,OACE,iBAAKP,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,4EACEI,IACA,SAAC,KAAD,CACEG,gBAAgB,gBAChBC,SAAU,SAAAC,GAAK,OAAIP,EAAkBO,EAAMA,MAA5B,EACfC,QAAS,CACP,CAAED,MAAO,MAAOE,MAAO,sBACvB,CAAEF,MAAO,MAAOE,MAAO,4BACvB,CAAEF,MAAO,YAAaE,MAAO,4EAC7B,CAAEF,MAAO,WAAYE,MAAO,2DAE9BC,aAAc,CAAEH,MAAO,MAAOE,MAAO,sBACrCE,MAAO,SAAAA,GAAK,yBACPA,GADO,IAEVC,aAAc,GAFJ,IAYfV,IACC,gBAAIL,UAAWC,EAAf,WACE,yBACE,mBACED,UACsB,QAApBF,EAAA,UACOG,EADP,YACyBA,GACrBA,EAENe,QAAS,kBAAMb,EAAkB,MAAxB,EANX,mCAWF,yBACE,mBACEH,UACsB,QAApBF,EAAA,UACOG,EADP,YACyBA,GACrBA,EAENe,QAAS,kBAAMb,EAAkB,MAAxB,EANX,yCAWF,yBACE,mBACEH,UACsB,cAApBF,EAAA,UACOG,EADP,YACyBA,GACrBA,EAENe,QAAS,kBAAMb,EAAkB,YAAxB,EANX,yFAYF,yBACE,mBACEH,UACsB,aAApBF,EAAA,UACOG,EADP,YACyBA,GACrBA,EAENe,QAAS,kBAAMb,EAAkB,WAAxB,EANX,2EAeX,C","sources":["webpack://easy-shop/./src/components/SellerInfo/SellerPurchases/SellerPurchases.module.scss?7395","components/SellerInfo/SellerPurchases/SellerPurchases.js","webpack://easy-shop/./src/components/Shared/OrderStatusList/OrderStatusList.module.scss?5552","components/Shared/OrderStatusList/OrderStatusList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ordersWrapper\":\"SellerPurchases_ordersWrapper__jCots\",\"ordersList\":\"SellerPurchases_ordersList__s2Lqc\",\"orderItem\":\"SellerPurchases_orderItem__hcDBu\",\"orderInfoWrapper\":\"SellerPurchases_orderInfoWrapper__V2lez\",\"orderInfoItem\":\"SellerPurchases_orderInfoItem__8ht+k\",\"orderSum\":\"SellerPurchases_orderSum__U6kGn\",\"orderBottomWrapper\":\"SellerPurchases_orderBottomWrapper__alRUV\",\"waitingPhrase\":\"SellerPurchases_waitingPhrase__Z4gK5\",\"btnLight\":\"SellerPurchases_btnLight__cAWYj\",\"message\":\"SellerPurchases_message__A4X63\",\"buttonBottomWrapper\":\"SellerPurchases_buttonBottomWrapper__NtaWU\",\"buttonTrashWrapper\":\"SellerPurchases_buttonTrashWrapper__iUjRF\"};","import { useState } from 'react';\nimport {\n  // useDispatch,\n  useSelector,\n} from 'react-redux';\n\nimport { selectOtherUser } from 'redux/otherUser/otherUser-selectors';\nimport OrderStatusList from 'components/Shared/OrderStatusList/OrderStatusList';\n// import Pagination from 'components/Shared/Pagination/Pagination';\n\nimport s from 'components/SellerInfo/SellerPurchases/SellerPurchases.module.scss';\n\nconst SellerPurchases = () => {\n  //   const dispatch = useDispatch();\n  const sellerInfo = useSelector(selectOtherUser);\n  console.log('sellerInfo in SellerPurchases:', sellerInfo);\n  const sellerOrders = sellerInfo.userOrders;\n  console.log('sellerOrders in SellerPurchases:', sellerOrders);\n  // const [currentPage, setCurrentPage] = useState(1);\n\n  const [currentSelector, setcurrentSelector] = useState('all');\n\n  const handleButtonClick = optionName => {\n    setcurrentSelector(optionName);\n    // setCurrentPage(1);\n  };\n\n  return (\n    // <div>\"Покупки продавця\"</div>;\n    <>\n      <div className={s.ordersWrapper}>\n        <OrderStatusList\n          currentSelector={currentSelector}\n          handleButtonClick={handleButtonClick}\n        />\n      </div>\n      {/* {totalPages > 1 && (\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        /> */}\n    </>\n  );\n};\n\nexport default SellerPurchases;\n","// extracted by mini-css-extract-plugin\nexport default {\"listBox\":\"OrderStatusList_listBox__YmcUi\",\"heading\":\"OrderStatusList_heading__zRkCM\",\"optionsList\":\"OrderStatusList_optionsList__G76gp\",\"selectButton\":\"OrderStatusList_selectButton__vMhds\",\"active\":\"OrderStatusList_active__Jcgt3\"};","import Select from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\nimport s from './OrderStatusList.module.scss';\n\nconst OrderStatusList = ({ currentSelector, handleButtonClick }) => {\n    const isTablet = useMediaQuery({ minWidth: 768 });\n  return (\n    <div className={s.listBox}>\n      <p className={s.heading}>За статусом</p>\n      {!isTablet && (\n        <Select\n          classNamePrefix=\"custom-select\"\n          onChange={value => handleButtonClick(value.value)}\n          options={[\n            { value: 'all', label: 'Всі' },\n            { value: 'new', label: 'Нові' },\n            { value: 'confirmed', label: 'Підтверджені' },\n            { value: 'canceled', label: 'Відхилені' },\n          ]}\n          defaultValue={{ value: 'all', label: 'Всі' }}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            // colors: {\n            //   ...theme.colors,\n            //   primary25: '#fbef35;',\n            //   primary: '#3b3b3b',\n            // },\n          })}\n        />\n      )}\n\n      {isTablet && (\n        <ul className={s.optionsList}>\n          <li>\n            <button\n              className={\n                currentSelector === 'all'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('all')}\n            >\n              Всі\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'new'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('new')}\n            >\n              Нові\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'confirmed'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('confirmed')}\n            >\n              Підтверджені\n            </button>\n          </li>\n          {/* <li>Виконані</li> */}\n          <li>\n            <button\n              className={\n                currentSelector === 'canceled'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('canceled')}\n            >\n              Відхилені\n            </button>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default OrderStatusList;\n"],"names":["sellerInfo","useSelector","selectOtherUser","console","log","sellerOrders","userOrders","useState","currentSelector","setcurrentSelector","className","s","OrderStatusList","handleButtonClick","optionName","isTablet","useMediaQuery","minWidth","classNamePrefix","onChange","value","options","label","defaultValue","theme","borderRadius","onClick"],"sourceRoot":""}