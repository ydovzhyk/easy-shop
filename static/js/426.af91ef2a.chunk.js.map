{"version":3,"file":"static/js/426.af91ef2a.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Basket/SizeSelection/SizeSelection.module.scss?0f1b","components/Basket/SizeSelection/SizeSelection.jsx","webpack://easy-shop/./src/components/Shared/MessageWindow/MessageWindow.module.scss?f563","components/Shared/MessageWindow/MessageWindow.jsx","webpack://easy-shop/./src/components/Shared/RoundButton/RoundButton.module.scss?06ef","components/Shared/RoundButton/RoundButton.jsx","components/Shared/helper/UserUpdateComponent.jsx","webpack://easy-shop/./src/components/Basket/CountBlock/CountBlock.module.scss?98fd","components/Basket/CountBlock/CountBlock.jsx","webpack://easy-shop/./src/components/Basket/BasketForm/BasketForm.module.scss?d799","components/Basket/BasketForm/BasketForm.jsx","webpack://easy-shop/./src/components/Basket/Basket.module.scss?2921","components/Basket/Basket.jsx","pages/BasketPage/BasketPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"menuGroupList\":\"SizeSelection_menuGroupList__u+JL6\",\"size\":\"SizeSelection_size__eTL2I\",\"menuGroupItems\":\"SizeSelection_menuGroupItems__g8cfH\",\"menuGroupItemsSelected\":\"SizeSelection_menuGroupItemsSelected__29WCY\"};","import { useState, useEffect } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Text from 'components/Shared/Text/Text';\n\nimport s from 'components/Basket/SizeSelection/SizeSelection.module.scss';\n\nconst SizeSelection = ({ sizeOption, onSelectedSizesChange, isFormSubmitted, historySize }) => {\n    \n    console.log('sizeOption:', sizeOption);\n    const sizeValuesArray = sizeOption ? sizeOption.map(item => item[0].value) : [];\n    console.log('sizeValuesArray:', sizeValuesArray);\n    const [selectedSizes, setSelectedSizes] = useState([]);\n\n    const handleSizeClick = size => {\n    let formattedSize = [];\n    if (sizeValuesArray.hasOwnProperty(size)) {\n        formattedSize.push({ name: size, value: sizeValuesArray[size] });\n    } else {\n        formattedSize.push({ name: size, value: size });\n    }\n\n    if (isSelected(size)) {\n        setSelectedSizes(selectedSizes.filter(s => s[0].name !== size));\n    } else {\n        setSelectedSizes([...selectedSizes, formattedSize]);\n    }\n    };\n    \n    const isSelected = size => {\n        return selectedSizes.some(s => s[0].name === size);\n    };\n\n    useEffect(() => {\n        onSelectedSizesChange(selectedSizes);\n    }, [selectedSizes, onSelectedSizesChange]);\n\n    useEffect(() => {\n        if (isFormSubmitted) {\n            setSelectedSizes([]);\n        }\n    }, [isFormSubmitted]);\n\n    useEffect(() => {\n        if (historySize) {\n            setSelectedSizes(historySize);\n        }\n    }, [historySize]);\n\n    return (\n        <div className={s.sizeBox}>\n            <Text\n                text={\n                    sizeValuesArray.length > 1\n                        ? \"Оберіть розмір:\"\n                        : \"Розмір:\"\n                }\n                textClass=\"productLabels\"\n            />\n            <ul className={s.menuGroupList}>\n                {Object.entries(sizeValuesArray).map(([size, values]) => {\n                    console.log('values', values);\n                    const isSelected = selectedSizes.some(s => s[0].name === size);\n                    return (\n                        <li\n                            key={nanoid()}\n                            className={`${s.menuGroupItems} ${\n                                isSelected ? s.menuGroupItemsSelected : ''\n                            }`}\n                            onClick={() => handleSizeClick(size)}\n                        >\n                            {values.length > 1 ? (\n                                <div className={s.size}>\n                                    <Text\n                                        text={\n                                            `EU: ${values[0].EU} / UA: ${values[1].UA} / IN: ${values[2].IN}`\n                                        }\n                                        textClass=\"after-title-bigger\"\n                                    />\n                                    \n                                </div>\n                                \n                            ) : (\n                                    sizeValuesArray.map(s => { \n                                        return (\n                                            <div className={s.size}>\n                                                <Text\n                                                text={`${Object.keys(s[0])}`}\n                                                textClass=\"after-title-bigger\"\n                                                />\n                                            </div>\n                                        )\n                                    })\n                            )}\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default SizeSelection;","// extracted by mini-css-extract-plugin\nexport default {\"messageWindow\":\"MessageWindow_messageWindow__uRdd8\",\"dismissButton\":\"MessageWindow_dismissButton__SLD4U\",\"boo\":\"MessageWindow_boo__YcpDh\",\"floating\":\"MessageWindow_floating__2J-P3\",\"face\":\"MessageWindow_face__YrZvM\",\"shadow\":\"MessageWindow_shadow__dHQj9\",\"floatingShadow\":\"MessageWindow_floatingShadow__rQPEA\",\"confirmButtons\":\"MessageWindow_confirmButtons__sF71C\",\"ButtonsBlock\":\"MessageWindow_ButtonsBlock__+USC0\",\"btnYes\":\"MessageWindow_btnYes__-yYz3\",\"btnNo\":\"MessageWindow_btnNo__lIEXL\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearProductMessage } from 'redux/product/product-slice';\nimport { clearUserMessage } from 'redux/auth/auth-slice';\nimport { clearVerifyMessage } from 'redux/verifyEmail/verifyEmail-slice';\n\nimport Text from 'components/Shared/Text/Text';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './MessageWindow.module.scss';\n\nexport default function MessageWindow({\n  text,\n  onDismiss,\n  confirmButtons,\n  onConfirm,\n}) {\n  const dispatch = useDispatch();\n  const [isDisplayed, setIsDisplayed] = useState(true);\n\n  const handleDismissClick = () => {\n    setIsDisplayed(false);\n    if (typeof onDismiss === 'function') {\n      onDismiss();\n    }\n    dispatch(clearProductMessage());\n    dispatch(clearUserMessage());\n    dispatch(clearVerifyMessage());\n  };\n\n  useEffect(() => {\n    setIsDisplayed(true);\n\n    if (!confirmButtons) {\n      const timeout = setTimeout(() => {\n        setIsDisplayed(false);\n        dispatch(clearProductMessage());\n        dispatch(clearUserMessage());\n        dispatch(clearVerifyMessage());\n      }, 5000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [text, dispatch, confirmButtons]);\n\n  if (!isDisplayed) {\n    return null;\n  }\n\n  const handleConfirmClick = choice => {\n    setIsDisplayed(false);\n    if (typeof onConfirm === 'function') {\n      onConfirm(choice);\n    }\n  };\n\n  return (\n    <div className={s.messageWindow}>\n      {!confirmButtons && (\n        <button className={s.dismissButton} onClick={handleDismissClick}>\n          <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n        </button>\n      )}\n      <div className={s.boo}>\n        <div className={s.face} id=\"face\"></div>\n      </div>\n      <div className={s.shadow}></div>\n      {confirmButtons ? (\n        <div className={s.confirmButtons}>\n          <Text text={text} textClass=\"textMessageBtn\" />\n          <div className={s.ButtonsBlock}>\n            <button\n              className={s.btnYes}\n              onClick={() => handleConfirmClick('yes')}\n            >\n              Так\n            </button>\n            <button\n              className={s.btnNo}\n              onClick={() => handleConfirmClick('no')}\n            >\n              Ні\n            </button>\n          </div>\n        </div>\n      ) : (\n        <Text text={text} textClass=\"textMessage\" />\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"roundButton\":\"RoundButton_roundButton__nMjVe\",\"scrollButton\":\"RoundButton_scrollButton__WegW6\",\"icon\":\"RoundButton_icon__X5lVR\"};","import s from 'components/Shared/RoundButton/RoundButton.module.scss';\n\nconst RoundButton = ({\n  icon: Icon,\n  btnClass = 'roundButton',\n  handleClick,\n  id,\n}) => {\n  return (\n    <div className={s[btnClass]} onClick={() => handleClick(id)}>\n      <Icon className={s.icon} />\n    </div>\n  );\n};\n\nexport default RoundButton;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/auth/auth-opetations';\n\nconst UserUpdateComponent = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const authData = JSON.parse(localStorage.getItem('easy-shop.authData'));\n    if (authData && authData.accessToken) {\n      const userData = {\n        accessToken: authData.accessToken,\n        refreshToken: authData.refreshToken,\n        sid: authData.sid,\n      };\n      dispatch(updateUser(userData));\n    }\n  }, [dispatch]);\n\n  return null;\n};\n\nexport default UserUpdateComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"priceAndQuantity\":\"CountBlock_priceAndQuantity__S0M30\",\"smallBox\":\"CountBlock_smallBox__TOm4i\",\"buttonWrapper\":\"CountBlock_buttonWrapper__oMVTy\",\"sumValue\":\"CountBlock_sumValue__PsIX+\",\"quantValue\":\"CountBlock_quantValue__ElQu5\"};","import { useState } from 'react';\nimport {AiOutlineMinus, AiOutlinePlus} from 'react-icons/ai'\nimport s from 'components/Basket/CountBlock/CountBlock.module.scss';\n\nconst CountBlock = ({ price }) => {\n    const [value, setValue] = useState(1);\n\n    const handleDecrement = () => {\n        setValue(value - 1);\n    }\n    const handleIncrement = () => {\n        setValue(value + 1) ;\n    }\n\n    const sum = () => {\n        return price * value;\n    }\n    return (\n        <div className={s.priceAndQuantity}>\n            <div className={s.smallBox}>\n                <div className={s.key }>Ціна</div>\n                <div className={s.sumValue}>{`${price} грн.` }</div>\n            </div>\n            <div className={s.smallBox}>\n                <div className={s.key }>Кількість</div>\n                <div className={s.buttonWrapper}>\n                    <button\n                        onClick={handleDecrement}\n                    >\n                        <AiOutlineMinus />\n                    </button>\n                    <span className={s.quantValue}>{value}</span>\n                    <button\n                        onClick={handleIncrement}\n                    >\n                        <AiOutlinePlus />\n                    </button>\n                </div>\n            </div>\n            <div className={s.smallBox}>\n                <div className={s.key }>Сума</div>\n                <div className={s.sumValue}>{`${sum()} грн.` }</div>\n            </div>\n        </div>  \n        \n    )\n}\n\nexport default CountBlock;","// extracted by mini-css-extract-plugin\nexport default {\"oneSellerBasket\":\"BasketForm_oneSellerBasket__41XJk\",\"wareItem\":\"BasketForm_wareItem__BoKOF\",\"photoAndNameAndPrice\":\"BasketForm_photoAndNameAndPrice__1MFhL\",\"photoAndNameAndBtn\":\"BasketForm_photoAndNameAndBtn__SvaTf\",\"photoAndName\":\"BasketForm_photoAndName__vdqmP\",\"thumb\":\"BasketForm_thumb__CAQkW\",\"mainPhotoCard\":\"BasketForm_mainPhotoCard__UB-mL\",\"descriptionWrapper\":\"BasketForm_descriptionWrapper__e1Er5\",\"linkWrapper\":\"BasketForm_linkWrapper__hx6ri\",\"btnWrapper\":\"BasketForm_btnWrapper__tsYH4\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { BsTrash } from 'react-icons/bs';\nimport { TfiPlus, TfiCheck } from 'react-icons/tfi';\n\nimport { updateUserBasket } from 'redux/auth/auth-opetations';\n\n\nimport Text from 'components/Shared/Text/Text';\nimport CountBlock from 'components/Basket/CountBlock/CountBlock';\nimport RoundButton from 'components/Shared/RoundButton/RoundButton';\nimport SizeSelection from 'components/Basket/SizeSelection/SizeSelection';\nimport NoPhoto from 'images/catalog_photo/no_photo.jpg';\nimport MessageWindow from 'components/Shared/MessageWindow/MessageWindow';\n\nimport s from 'components/Basket/BasketForm/BasketForm.module.scss';\n\nconst BasketForm = ({ ownerName, products, isTablet }) => {\n    const dispatch = useDispatch();\n    const [selectedSizes, setSelectedSizes] = useState([]);\n    const [productId, setProductId] = useState(null);\n    const [questionWindow, setQuestionWindow] = useState(false);\n    \n\n    // console.log('selectedSizes:', selectedSizes);\n\n    const handleButtonTrashClick = id => {\n    setProductId(id);\n    setQuestionWindow(true);\n    };\n\n    const deleteProductFrombasket = choice => {\n      if (choice === 'yes') {\n        console.log('yes', productId);\n        \n          dispatch(updateUserBasket({productId: productId}));\n          setQuestionWindow(false);\n       \n      } else if (choice === 'no') {\n        console.log('no');\n        setProductId(null)\n        setQuestionWindow(false);\n        }\n    };\n\n\n    const handleSelectedSizesChange = sizes => {\n      setSelectedSizes(sizes);\n      console.log('selectedSizes:', selectedSizes);\n    };\n\n    // const onSubmit = async (data, e) => {\n    //     e.preventDefault();\n        \n    // }\n    return (\n        <form>\n            <Text textClass=\"title\" text={`Продавець: ${ownerName}`} />\n            <ul className={s.oneSellerBasket}>\n                {products.map(({_id, nameProduct, mainPhotoUrl, brendName, price, size}) => (\n                  <li className={s.wareItem} key={_id}>\n                    <div className={s.photoAndNameAndPrice}>\n                      <div className={s.photoAndNameAndBtn}>\n                        <div className={s.photoAndName}>\n                        <div className={s.thumb}>\n                          <img\n                            className={s.mainPhotoCard}\n                            src={mainPhotoUrl}\n                            onError={e => (e.target.src = NoPhoto)}\n                            alt={nameProduct}\n                          />\n                        </div>\n                        <div className={s.descriptionWrapper}>\n                          <Text textClass=\"verifyAttention\" text={brendName} />\n                          <Text textClass=\"verifyAttention\" text={nameProduct} />\n                        </div>\n                        \n                        </div>\n                        \n                        {isTablet && (\n                          <CountBlock\n                          price={price} />\n                        )}\n                          <RoundButton\n                                    icon={BsTrash}\n                                    handleClick={handleButtonTrashClick}\n                            id={_id}\n                          />\n                      </div>\n                      {size && (\n                          <SizeSelection\n                          sizeOption={size}\n                          onSelectedSizesChange={handleSelectedSizesChange}\n                          />\n                        )}\n                      {!isTablet && (\n                        <CountBlock\n                          price={price} />\n                      )}\n                      \n                    </div> \n                  </li>\n                ))}\n              </ul>\n              <div className={s.linkWrapper}>\n                <Link to='/seller/:id' className={s.btnWrapper}>\n                  <Text textClass=\"verifyAttention\" text={'Додати інші товари продавця'}/>\n                  <RoundButton icon={TfiPlus}/>\n                </Link>\n                <Link to='/checkout' className={s.btnWrapper}>\n                  <Text textClass=\"verifyAttention\" text={'Оформити замовлення'}/>\n                  <RoundButton icon={TfiCheck}/>\n                </Link>\n            </div>\n            {questionWindow && (\n          <MessageWindow\n            text=\"Ви впевнені, що хочете видалити товар з кошика?\"\n            confirmButtons={true}\n            onConfirm={deleteProductFrombasket}\n          />\n        )}\n                </form>\n)\n}\n\nexport default BasketForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"basketsSection\":\"Basket_basketsSection__o54-0\",\"orderList\":\"Basket_orderList__okTma\",\"orderItem\":\"Basket_orderItem__khi0G\"};","import {  useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n// import { Link } from 'react-router-dom';\n// import { BsTrash } from 'react-icons/bs';\n// import { TfiPlus, TfiCheck } from 'react-icons/tfi';\nimport { getMessage, selectProductsFromBasket, selectSellersFromBasket } from 'redux/product/product-selectors';\nimport { getUser} from 'redux/auth/auth-selectors';\nimport { getProductsFromBasket } from 'redux/product/product-operations';\n\nimport Container from 'components/Shared/Container/Container';\nimport UserUpdateComponent from 'components/Shared/helper/UserUpdateComponent';\nimport Text from 'components/Shared/Text/Text';\nimport BasketForm from 'components/Basket/BasketForm/BasketForm';\n// import RoundButton from 'components/Shared/RoundButton/RoundButton';\n// import CountBlock from './CountBlock/CountBlock';\n// import SizeSelection  from 'components/Basket/SizeSelection/SizeSelection';\n// import NoPhoto from 'images/catalog_photo/no_photo.jpg';\n\n\nimport s from './Basket.module.scss';\n\n\nconst Basket = () => {\n  const dispatch = useDispatch();\n \n  const isMessage = useSelector(getMessage);\n  const user = useSelector(getUser);\n  const productsFrombasket = useSelector(selectProductsFromBasket);\n  const sellersFrombasket = useSelector(selectSellersFromBasket);\n  \n  const isTablet = useMediaQuery({ minWidth: 840 });\n  \n  console.log('productsFrombasket:', productsFrombasket);\n  // console.log('sellersfrombasket:', sellersFrombasket);\n  \n\n  const groupedProducts = sellersFrombasket.map((seller) => {\n    const ownerName = seller.username;\n    const ownerId = seller._id;\n    const products = productsFrombasket\n      .filter((product) => product.owner === ownerId)\n      .map((product) => ({\n        _id: product._id,\n        brendName: product.brendName,\n        nameProduct: product.nameProduct,\n        mainPhotoUrl: product.mainPhotoUrl,\n        price: product.price,\n        quantity: product.quantity,\n        size: product.size,\n\n      }));\n    return {\n      ownerId,\n      ownerName,\n      products\n    }\n  })\n\n  console.log('groupedProducts:', groupedProducts);\n\n  \n\n  useEffect(() => {\n    dispatch(getProductsFromBasket(user._id));\n  }, [dispatch, user]); \n\n\n  return (\n    <Container>\n    <section className={s.basketsSection}>\n      {isMessage === '' && <UserUpdateComponent />}\n      <Text textClass=\"title\" text=\"Кошик\" />\n      <ul className={s.orderList}>\n        {groupedProducts.map(\n          ({ ownerId, ownerName, products }) => (\n            <li className={s.orderItem} key={ownerId}>\n              <BasketForm\n                ownerName={ownerName}\n                products={products}\n                isTablet={isTablet}\n              />\n              \n            </li>\n            \n          ))}\n      </ul>\n    </section>\n    </Container>\n  );\n};\n\nexport default Basket;\n","import Basket from 'components/Basket/Basket';\n\nconst BasketPage = () => {\n  return (\n    <>\n      <Basket />\n    </>\n  );\n};\n\nexport default BasketPage;\n"],"names":["sizeOption","onSelectedSizesChange","isFormSubmitted","historySize","console","log","sizeValuesArray","map","item","value","useState","selectedSizes","setSelectedSizes","handleSizeClick","size","formattedSize","hasOwnProperty","push","name","isSelected","filter","s","some","useEffect","className","Text","text","length","textClass","Object","entries","values","onClick","EU","UA","IN","keys","nanoid","MessageWindow","onDismiss","confirmButtons","onConfirm","dispatch","useDispatch","isDisplayed","setIsDisplayed","timeout","setTimeout","clearProductMessage","clearUserMessage","clearVerifyMessage","clearTimeout","handleConfirmClick","choice","icon","faTimes","id","Icon","btnClass","handleClick","authData","JSON","parse","localStorage","getItem","accessToken","userData","refreshToken","sid","updateUser","price","setValue","ownerName","products","isTablet","productId","setProductId","questionWindow","setQuestionWindow","handleButtonTrashClick","handleSelectedSizesChange","sizes","_id","nameProduct","mainPhotoUrl","brendName","src","onError","e","target","NoPhoto","alt","RoundButton","BsTrash","SizeSelection","to","TfiPlus","TfiCheck","updateUserBasket","isMessage","useSelector","getMessage","user","getUser","productsFrombasket","selectProductsFromBasket","sellersFrombasket","selectSellersFromBasket","useMediaQuery","minWidth","groupedProducts","seller","username","ownerId","product","owner","quantity","getProductsFromBasket","Container","UserUpdateComponent"],"sourceRoot":""}