{"version":3,"file":"static/js/762.fd1ce1ec.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Profile/EmailVerification/EmailVerification.module.scss?df8c","components/Profile/EmailVerification/EmailVerification.jsx","components/Shared/Container/Container.jsx","webpack://easy-shop/./src/components/Shared/MessageWindow/MessageWindow.module.scss?f563","components/Shared/MessageWindow/MessageWindow.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"verifyWrapper\":\"EmailVerification_verifyWrapper__r3x-K\",\"textWrapper\":\"EmailVerification_textWrapper__-CeYa\",\"formWrapper\":\"EmailVerification_formWrapper__uuAL+\",\"partFrame\":\"EmailVerification_partFrame__qG03k\",\"phoneWrapper\":\"EmailVerification_phoneWrapper__KzY9n\",\"changeInput\":\"EmailVerification_changeInput__H3ZcU\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { getVerifiEmail } from 'redux/verifiEmail/verifiEmail-selectors';\nimport { field } from 'components/Shared/TextField/fields';\nimport { verifyEmail } from 'redux/verifiEmail/verifiEmail-operations';\nimport { getVerifyMessage } from 'redux/verifiEmail/verifiEmail-selectors';\nimport MessageWindow from 'components/Shared/MessageWindow/MessageWindow';\nimport Container from 'components/Shared/Container';\nimport Text from 'components/Shared/Text/Text';\nimport Button from 'components/Shared/Button';\nimport s from 'components/Profile/EmailVerification/EmailVerification.module.scss';\n\nconst EmailVerification = () => {\n  const dispatch = useDispatch();\n  const verifiEmail = useSelector(getVerifiEmail);\n  const isMessage = useSelector(getVerifyMessage);\n\n  const { control, handleSubmit, reset } = useForm({\n    defaultValues: {\n      email: verifiEmail,\n    },\n  });\n\n  const onSubmit = async (data, e) => {\n    e.preventDefault();\n    dispatch(verifyEmail(data.email));\n    reset();\n  };\n\n  return (\n    <Container>\n      <div className={s.verifyWrapper}>\n        <Text\n          text={'Підтвердіть свою електронну адресу'}\n          textClass=\"verifyTextTitle\"\n        />\n        <Text text={'Навіщо це потрібно?'} textClass=\"verifyTextmiddle\" />\n        <Text\n          text={\n            \"Підтвердіть свою електронну адресу, щоб отримати доступ до додавання оголошень. Це обов'язкова умова для продажу на EASYshop \"\n          }\n          textClass=\"verifyTextSmall\"\n        />\n        <Text\n          text={\n            'Ваша електронна адреса не буде доступна іншим користувачам на EASYshop'\n          }\n          textClass=\"verifyTextmiddle\"\n        />\n        <Text text={'Як це зробити:'} textClass=\"verifyTextmiddle\" />\n        <div className={s.textWrapper}>\n          <Text\n            text={\n              '1.Натисніть на кнопку \"Підтвердити\". На вашу електронну адресу буде відправлено посилання'\n            }\n            textClass=\"verifyTextSmall\"\n          />\n          <Text\n            text={\n              '2.Перейдіть за посиланням, яке отримали в електронному листі'\n            }\n            textClass=\"verifyTextSmall\"\n          />\n        </div>\n        <Text\n          text={\n            'Важливо! Посилання дійсне протягом 10 хвилин з моменту його формування.'\n          }\n          textClass=\"verifyAttention\"\n        />\n        <div className={s.formWrapper}>\n          <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <div className={s.partFrame}>\n              <Text\n                text={'Введіть електронну адресу'}\n                textClass=\"verifyAttention\"\n              />\n              <div className={s.phoneWrapper}>\n                <Controller\n                  control={control}\n                  name=\"email\"\n                  render={({ field: { onChange, value } }) => (\n                    <input\n                      className={s.changeInput}\n                      type=\"text\"\n                      value={value}\n                      control={control}\n                      handleSubmit={onChange}\n                      {...field.email}\n                    />\n                  )}\n                />\n                <Button text=\"Підтвердити\" btnClass=\"btnLight\" />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      {isMessage && <MessageWindow text={isMessage} />}\n    </Container>\n  );\n};\n\nexport default EmailVerification;\n","const Container = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"messageWindow\":\"MessageWindow_messageWindow__uRdd8\",\"dismissButton\":\"MessageWindow_dismissButton__SLD4U\",\"boo\":\"MessageWindow_boo__YcpDh\",\"floating\":\"MessageWindow_floating__2J-P3\",\"face\":\"MessageWindow_face__YrZvM\",\"shadow\":\"MessageWindow_shadow__dHQj9\",\"floatingShadow\":\"MessageWindow_floatingShadow__rQPEA\",\"confirmButtons\":\"MessageWindow_confirmButtons__sF71C\",\"ButtonsBlock\":\"MessageWindow_ButtonsBlock__+USC0\",\"btnYes\":\"MessageWindow_btnYes__-yYz3\",\"btnNo\":\"MessageWindow_btnNo__lIEXL\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearProductMessage } from 'redux/product/product-slice';\nimport { clearUserMessage } from 'redux/auth/auth-slice';\nimport { clearVerifyMessage } from 'redux/verifiEmail/verifiEmail-slice';\n\nimport Text from 'components/Shared/Text/Text';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './MessageWindow.module.scss';\n\nexport default function MessageWindow({\n  text,\n  onDismiss,\n  confirmButtons,\n  onConfirm,\n}) {\n  const dispatch = useDispatch();\n  const [isDisplayed, setIsDisplayed] = useState(true);\n\n  const handleDismissClick = () => {\n    setIsDisplayed(false);\n    if (typeof onDismiss === 'function') {\n      onDismiss();\n    }\n    dispatch(clearProductMessage());\n    dispatch(clearUserMessage());\n    dispatch(clearVerifyMessage());\n  };\n\n  useEffect(() => {\n    setIsDisplayed(true);\n\n    if (!confirmButtons) {\n      const timeout = setTimeout(() => {\n        setIsDisplayed(false);\n        dispatch(clearProductMessage());\n        dispatch(clearUserMessage());\n        dispatch(clearVerifyMessage());\n      }, 5000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [text, dispatch, confirmButtons]);\n\n  if (!isDisplayed) {\n    return null;\n  }\n\n  const handleConfirmClick = choice => {\n    setIsDisplayed(false);\n    if (typeof onConfirm === 'function') {\n      onConfirm(choice);\n    }\n  };\n\n  return (\n    <div className={s.messageWindow}>\n      {!confirmButtons && (\n        <button className={s.dismissButton} onClick={handleDismissClick}>\n          <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n        </button>\n      )}\n      <div className={s.boo}>\n        <div className={s.face} id=\"face\"></div>\n      </div>\n      <div className={s.shadow}></div>\n      {confirmButtons ? (\n        <div className={s.confirmButtons}>\n          <Text text={text} textClass=\"textMessageBtn\" />\n          <div className={s.ButtonsBlock}>\n            <button\n              className={s.btnYes}\n              onClick={() => handleConfirmClick('yes')}\n            >\n              Так\n            </button>\n            <button\n              className={s.btnNo}\n              onClick={() => handleConfirmClick('no')}\n            >\n              Ні\n            </button>\n          </div>\n        </div>\n      ) : (\n        <Text text={text} textClass=\"textMessage\" />\n      )}\n    </div>\n  );\n}\n"],"names":["dispatch","useDispatch","verifiEmail","useSelector","getVerifiEmail","isMessage","getVerifyMessage","useForm","defaultValues","email","control","handleSubmit","reset","onSubmit","data","e","preventDefault","verifyEmail","Container","className","s","Text","text","textClass","name","render","field","onChange","value","type","Button","btnClass","MessageWindow","children","onDismiss","confirmButtons","onConfirm","useState","isDisplayed","setIsDisplayed","useEffect","timeout","setTimeout","clearProductMessage","clearUserMessage","clearVerifyMessage","clearTimeout","handleConfirmClick","choice","onClick","icon","faTimes","size","id"],"sourceRoot":""}