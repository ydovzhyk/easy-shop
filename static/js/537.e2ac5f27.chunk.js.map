{"version":3,"file":"static/js/537.e2ac5f27.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Profile/MySales/MySales.module.scss?fad3","components/Profile/MySales/MySales.jsx","webpack://easy-shop/./src/components/Shared/OrderStatusList/OrderStatusList.module.scss?5552","components/Shared/OrderStatusList/OrderStatusList.jsx","webpack://easy-shop/./src/components/Shared/Pagination/Pagination.module.scss?dfd1","components/Shared/Pagination/Pagination.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ordersWrapper\":\"MySales_ordersWrapper__zezf+\",\"ordersList\":\"MySales_ordersList__s6tus\",\"orderItem\":\"MySales_orderItem__l-5wO\",\"orderInfoWrapper\":\"MySales_orderInfoWrapper__rgdFU\",\"orderInfoItem\":\"MySales_orderInfoItem__zGXXl\",\"orderSum\":\"MySales_orderSum__MPLUJ\",\"orderBottomWrapper\":\"MySales_orderBottomWrapper__P6Du2\",\"waitingPhrase\":\"MySales_waitingPhrase__o59Sm\",\"message\":\"MySales_message__x8quZ\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  getUserSales, updateOrderStatus } from 'redux/order/order-operations';\nimport {\n  getLoadingOrders,\n  selectUserSales,\n  selectUserSalesTotalPages,\n} from 'redux/order/order-selectors';\n\nimport OrderProductsList from 'components/Shared/OrderProductsList/OrderProductsList';\nimport Pagination from 'components/Shared/Pagination/Pagination';\nimport Button from 'components/Shared/Button/Button';\nimport OrderStatusList from 'components/Shared/OrderStatusList/OrderStatusList';\nimport s from './MySales.module.scss';\n\nconst MySales = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getLoadingOrders);\n    const userSales = useSelector(selectUserSales);\n    const totalPages = useSelector(selectUserSalesTotalPages);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentSelector, setcurrentSelector] = useState('all');\n\n  useEffect(() => {\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [dispatch, currentPage, currentSelector]);\n\n  // for pagination\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleButtonClick = optionName => {\n    setcurrentSelector(optionName);\n    setCurrentPage(1);\n  };\n  \n  const handleConfirmButtonClick = (id) => {\n    console.log('handleConfirmButtonClick');\n    dispatch(updateOrderStatus({ orderId: id, confirmed: true, statusNew: false }));\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n  }\n  const handleCancelButtonClick = (id) => {\n      console.log('handleCancelButtonClick');\n      dispatch(\n        updateOrderStatus({ orderId: id, confirmed: false, statusNew: false })\n      );\n      dispatch(\n        getUserSales({\n          page: currentPage,\n          selectorName: currentSelector,\n        })\n      );\n  };\n\n  return (\n    <>\n      <div className={s.ordersWrapper}>\n        <OrderStatusList\n            currentSelector={currentSelector}\n            handleButtonClick={handleButtonClick}\n        />\n        {userSales.length > 0 && (\n          <ul className={s.ordersList}>\n            {userSales.map(\n              ({\n                _id,\n                orderSum,\n                orderDate,\n                orderNumber,\n                products,\n                productInfo,\n                client,\n                statusNew,\n                confirmed,\n              }) => (\n                <li className={s.orderItem} key={_id}>\n                  <div className={s.orderInfoWrapper}>\n                    <div className={s.orderInfoItem}>\n                      <p>Покупець:</p>\n                      <p>\n                        {client.customerSecondName} {client.customerFirstName}\n                      </p>\n                      <p>Номер телефону: {client.customerTel}</p>\n                    </div>\n                    <div className={s.orderInfoItem}>\n                      <p>Замовлення &#8470; {orderNumber}</p>\n                      <p>{orderDate}</p>\n                    </div>\n                  </div>\n                  <OrderProductsList\n                    productsForOrder={productInfo}\n                    products={products}\n                  />\n                  <div className={s.orderBottomWrapper}>\n                    {statusNew === true ? (\n                      <>\n                        <Button\n                          type=\"button\"\n                          btnClass=\"btnLight\"\n                          text=\"Підтвердити замовлення\"\n                          handleClick={() => handleConfirmButtonClick(_id)}\n                        />\n                        <Button\n                          type=\"button\"\n                          btnClass=\"btnDark\"\n                          text=\"Скасувати замовлення\"\n                          handleClick={() => handleCancelButtonClick(_id)}\n                        />\n                      </>\n                    ) : (\n                      <p className={s.waitingPhrase}>\n                        {confirmed === true ? 'Підтверджено' : 'Скасовано'}\n                      </p>\n                    )}\n\n                    <p\n                      className={s.orderSum}\n                    >{`Сума замовлення: ${orderSum} грн.`}</p>\n                  </div>\n                </li>\n              )\n            )}\n          </ul>\n        )}\n        {!isLoading && userSales.length === 0 && (\n          <p className={s.message}>Замовлень з таким статусом у вас ще немає</p>\n        )}\n      </div>\n      {totalPages > 1 && (\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MySales;\n","// extracted by mini-css-extract-plugin\nexport default {\"listBox\":\"OrderStatusList_listBox__YmcUi\",\"heading\":\"OrderStatusList_heading__zRkCM\",\"optionsList\":\"OrderStatusList_optionsList__G76gp\",\"selectButton\":\"OrderStatusList_selectButton__vMhds\",\"active\":\"OrderStatusList_active__Jcgt3\"};","import Select from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\nimport s from './OrderStatusList.module.scss';\n\nconst OrderStatusList = ({ currentSelector, handleButtonClick }) => {\n    const isTablet = useMediaQuery({ minWidth: 768 });\n  return (\n    <div className={s.listBox}>\n      <p className={s.heading}>За статусом</p>\n      {!isTablet && (\n        <Select\n          onChange={value => handleButtonClick(value.value)}\n          options={[\n            { value: 'all', label: 'Всі' },\n            { value: 'new', label: 'Нові' },\n            { value: 'confirmed', label: 'Підтверджені' },\n            { value: 'canceled', label: 'Відхилені' },\n          ]}\n          defaultValue={{ value: 'all', label: 'Всі' }}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            colors: {\n              ...theme.colors,\n              primary25: '#fbef35;',\n              primary: '#3b3b3b',\n            },\n          })}\n        />\n      )}\n\n      {isTablet && (\n        <ul className={s.optionsList}>\n          <li>\n            <button\n              className={\n                currentSelector === 'all'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('all')}\n            >\n              Всі\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'new'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('new')}\n            >\n              Нові\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'confirmed'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('confirmed')}\n            >\n              Підтверджені\n            </button>\n          </li>\n          {/* <li>Виконані</li> */}\n          <li>\n            <button\n              className={\n                currentSelector === 'canceled'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('canceled')}\n            >\n              Відхилені\n            </button>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default OrderStatusList;\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationSection\":\"Pagination_paginationSection__1F1CP\",\"pagesSet\":\"Pagination_pagesSet__2tGzL\",\"pageBox\":\"Pagination_pageBox__Ti6uC\",\"active\":\"Pagination_active__yaPsQ\",\"btnLeft\":\"Pagination_btnLeft__Gnp4s\",\"btnRight\":\"Pagination_btnRight__O85qW\"};","import React from 'react';\n\nimport s from './Pagination.module.scss';\n\nconst Pagination = ({ totalPages, currentPage, onPageChange }) => {\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const displayRange = 2; // Кількість сторінок, які відображаються навколо поточної сторінки\n\n    let startPage = Math.max(1, currentPage - displayRange);\n    let endPage = Math.min(totalPages, currentPage + displayRange);\n\n    if (currentPage <= displayRange) {\n      endPage = Math.min(displayRange * 2 + 1, totalPages);\n    }\n\n    if (currentPage >= totalPages - displayRange) {\n      startPage = Math.max(totalPages - displayRange * 2, 1);\n    }\n\n    for (let page = startPage; page <= endPage; page++) {\n      pageNumbers.push(page);\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <div className={s.paginationSection}>\n      <button \n        className={`${s.btnLeft} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        &lt;\n      </button>\n      <div className={s.pagesSet}>\n        {getPageNumbers().map(page => (\n          <button\n            key={page}\n            onClick={() => onPageChange(page)}\n            className={currentPage === page ? s.active : s.pageBox}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n      <button\n        className={`${s.btnRight} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"names":["dispatch","useDispatch","isLoading","useSelector","getLoadingOrders","userSales","selectUserSales","totalPages","selectUserSalesTotalPages","useState","currentPage","setCurrentPage","currentSelector","setcurrentSelector","useEffect","getUserSales","page","selectorName","window","scrollTo","top","behavior","className","s","OrderStatusList","handleButtonClick","optionName","length","map","_id","orderSum","orderDate","orderNumber","products","productInfo","client","statusNew","confirmed","customerSecondName","customerFirstName","customerTel","OrderProductsList","productsForOrder","Button","type","btnClass","text","handleClick","id","console","log","updateOrderStatus","orderId","Pagination","onPageChange","isTablet","useMediaQuery","minWidth","onChange","value","options","label","defaultValue","theme","borderRadius","colors","primary25","primary","onClick","disabled","pageNumbers","startPage","Math","max","endPage","min","displayRange","push","getPageNumbers"],"sourceRoot":""}