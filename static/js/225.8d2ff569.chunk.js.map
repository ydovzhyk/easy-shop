{"version":3,"file":"static/js/225.8d2ff569.chunk.js","mappings":"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B,mBAClB,MACF,IAAK,kFACHA,EAAkB,oBAClB,MACF,IAAK,6EACHA,EAAkB,mBAClB,MACF,QACEA,EAAkBF,EAIxB,GAAiB,yCAAbD,EACF,OAAQC,GACN,IAAK,sEACHE,EAAkB,YAClB,MACF,IAAK,uCACHA,EAAkB,UAClB,MACF,IAAK,mDACHA,EAAkB,SAClB,MACF,IAAK,yFACHA,EAAkB,wBAClB,MACF,IAAK,yFACHA,EAAkB,qBAClB,MACF,IAAK,QACHA,EAAkB,uCAClB,MACF,IAAK,4EACHA,EAAkB,YAClB,MACF,IAAK,yDACHA,EAAkB,cAClB,MACF,IAAK,oDACHA,EAAkB,eAClB,MACF,IAAK,wFACHA,EAAkB,aAClB,MACF,IAAK,6CACHA,EAAkB,QAClB,MACF,IAAK,qEACHA,EAAkB,WAClB,MACF,IAAK,uGACHA,EAAkB,6BAClB,MACF,IAAK,mDACHA,EAAkB,kBAClB,MACF,IAAK,sEACHA,EAAkB,qBAClB,MACF,IAAK,uCACHA,EAAkB,QAClB,MACF,IAAK,6EACHA,EAAkB,mBAClB,MACF,QACEA,EAAkBF,EAKxB,GAAiB,8EAAbD,EACF,OAAQC,GACN,IAAK,kFACHE,EAAkB,kBAClB,MACF,IAAK,6EACHA,EAAkB,uBAClB,MACF,IAAK,6HACHA,EAAkB,mBAClB,MACF,IAAK,wFACHA,EAAkB,aAClB,MACF,IAAK,uHACHA,EAAkB,0BAClB,MACF,IAAK,kFACHA,EAAkB,kBAClB,MACF,IAAK,oGACHA,EAAkB,uBAClB,MACF,IAAK,iHACHA,EAAkB,0BAClB,MACF,IAAK,gHACHA,EAAkB,oBAClB,MACF,QACEA,EAAkBF,EAKxB,GAAiB,4FAAbD,EACF,OAAQC,GACN,IAAK,0GACHE,EAAkB,kBAClB,MACF,IAAK,2GACHA,EAAkB,qBAClB,MACF,IAAK,4HACHA,EAAkB,uBAClB,MACF,IAAK,6CACHA,EAAkB,UAClB,MACF,IAAK,+FACHA,EAAkB,wBAClB,MACF,IAAK,uHACHA,EAAkB,iBAClB,MACF,IAAK,uHACHA,EAAkB,iBAClB,MACF,IAAK,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","sources":["images/Avatar/avatar.svg","webpack://easy-shop/./src/components/Dialogue/Dialogue.module.scss?2cf4","components/Dialogue/Dialogue.jsx","webpack://easy-shop/./src/components/Profile/Avatar/Avatar.module.scss?696a","components/Profile/Avatar/Avatar.jsx","webpack://easy-shop/./src/components/Shared/MessageWindow/MessageWindow.module.scss?f563","components/Shared/MessageWindow/MessageWindow.jsx","webpack://easy-shop/./src/components/Shared/RoundButton/RoundButton.module.scss?06ef","components/Shared/RoundButton/RoundButton.jsx","funcs&hooks/translateParamsToEN.js","webpack://easy-shop/./src/components/Message/DialogueList/DialogueList.module.scss?cfa4","components/Message/DialogueList/DialogueList.jsx","webpack://easy-shop/./src/components/Message/DialogueDetail/DialogueDetail.module.scss?3f03","components/Message/DialogueDetail/DialogueDetail.jsx","webpack://easy-shop/./src/components/Message/Message.module.scss?ab33","components/Message/Message.jsx","pages/MessagePage/MessagePage.jsx"],"sourcesContent":["var _style, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAvatar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 122.62\",\n    style: {\n      enableBackground: \"new 0 0 122.88 122.62\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \".st0{fill-rule:evenodd;clip-rule:evenodd;}\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M31.61,60.59l5.87-0.15l2.78-0.07l4.22,4.9c0.99,1.15,2,2.31,3.11,3.42c-0.78,1.17-4.3,4.15-7.42,6.79 c-1.38,1.17-2.69,2.28-3.7,3.19c-7.92,3.08-15.66,6.23-21.66,10c-4.6,2.88-6.98,5.06-8.84,8.55c-4.92,9.23-3.79,7.99-5.79,17.44 c-0.62,8.33-0.01,7.91,5.84,7.81c4.22-0.07,8.67-0.11,13.3-0.13L15.2,90.87c7.4-3.4,12.58-6.37,21.32-9.42 c10.72,21.64,44.87,17.88,48.54-0.95c7.65,2.47,15.04,6.85,22.62,10.04l-4.71,32.08c4.85-0.03,9.53-0.08,13.98-0.17 c6.24-0.12,6.3,0.16,5.68-6.34c-0.69-7.27-3.01-13.4-5.95-18.91c-1.86-3.49-4.24-5.66-8.84-8.55c-6.06-3.8-13.9-6.99-21.91-10.09 c-0.72-0.65-1.53-1.35-2.36-2.08c-2.63-2.3-5.58-4.89-6.78-6.37c1.88-1.65,3.46-3.54,5.03-5.42l2.65-3.19 c0.04-0.05,0.24-0.28,0.54-0.63c0.15-0.18,0.31-0.36,0.48-0.56h5.79c8.54-18.28,3.12-45.41-14.34-56.91C71.57-0.14,67.72,0,61.44,0 c-7.2,0-10.87,0.23-17.04,4.31c-9.09,6.01-14.67,16.41-17.02,30.85C26.89,42.35,26.58,54.79,31.61,60.59L31.61,60.59z M41.63,57.97 c-4.78-16.59-2.45-31.84,10.62-44.9c2.32,7.5,7.52,13.7,16.38,18.27c4.24,3.14,8.33,6.94,12.29,11.3c0.7-2.89-1.98-6.41-5.23-10.03 c3.01,1.49,5.77,3.56,7.73,7.56c2.27,4.64,2.24,8.55,1.49,13.59c-0.22,1.46-0.52,2.85-0.91,4.18c-0.26,0.1-0.49,0.25-0.65,0.45 c-0.36,0.44-0.72,0.87-1.05,1.25c-0.1,0.12-0.19,0.22-0.55,0.66l-2.65,3.19c-2.02,2.43-4.07,4.86-6.66,6.63 c-2.47,1.69-5.51,2.81-9.67,2.8c-3.83-0.01-6.74-1.09-9.13-2.69c-2.51-1.67-4.53-3.96-6.47-6.2l-4.84-5.62 C42.16,58.21,41.91,58.06,41.63,57.97L41.63,57.97z M81.1,77.84c-2.5-2.19-5.12-4.53-6.4-6.1l-0.09,0.06 c-3.02,2.06-6.74,3.44-11.84,3.43c-4.76-0.01-8.34-1.34-11.27-3.29c-0.7-0.47-1.36-0.97-1.98-1.49c-1.46,1.83-4.71,4.58-7.63,7.05 l-0.64,0.54C40.79,94.45,76.31,99.42,81.1,77.84L81.1,77.84z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAvatar);\nexport default __webpack_public_path__ + \"static/media/avatar.27ffa8cc08b4da221c5a83ff4cbb218c.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"dialogueContainer\":\"Dialogue_dialogueContainer__FuS7j\",\"additionalOpts\":\"Dialogue_additionalOpts__o-iwF\",\"avatar\":\"Dialogue_avatar__Snahc\",\"textInputArea\":\"Dialogue_textInputArea__7QqLK\",\"dialogueGroup\":\"Dialogue_dialogueGroup__CccDt\",\"dialogueBox\":\"Dialogue_dialogueBox__Zqye0\",\"dialogueMessage\":\"Dialogue_dialogueMessage__tL3Cl\",\"dialogueMessageRight\":\"Dialogue_dialogueMessageRight__KBBVw\",\"textDate\":\"Dialogue_textDate__qAQ-I\",\"textarea\":\"Dialogue_textarea__F4Goc\",\"questionButton\":\"Dialogue_questionButton__et0nJ\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { createDialogue } from 'redux/dialogue/dialogue-operations';\nimport { getLogin, getUser, getUserAvatar } from 'redux/auth/auth-selectors';\nimport { getDialogueStore } from 'redux/dialogue/dialogue-selectors';\nimport { clearDialogue } from 'redux/dialogue/dialogue-slice';\nimport {\n  getDialogue,\n  deleteDialogueNewMessage,\n} from 'redux/dialogue/dialogue-operations';\n\nimport { BiMessageDetail } from 'react-icons/bi';\nimport Text from 'components/Shared/Text/Text';\nimport Avatar from 'components/Profile/Avatar/Avatar';\nimport Button from 'components/Shared/Button/Button';\n\nimport s from './Dialogue.module.scss';\n\nconst Dialogue = ({ productInfo }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const productId = productInfo._id;\n  const productOwner = productInfo.owner;\n  const selectedDialogueId = productInfo.userDialogue;\n\n  const userAvatar = useSelector(getUserAvatar);\n  const user = useSelector(getUser);\n  const isUserLogin = useSelector(getLogin);\n  const [myQuestion, setMyQuestion] = useState('');\n  const [isNewMassege, setIsNewMassege] = useState(null);\n  const dialogues = useSelector(getDialogueStore);\n\n  useEffect(() => {\n    setIsNewMassege(user.newMessage ? user.newMessage : 0);\n  }, [user.newMessage]);\n\n  useEffect(() => {\n    if (!productId || !isUserLogin) {\n      return;\n    }\n    if (selectedDialogueId) {\n      return;\n    }\n    dispatch(clearDialogue());\n    dispatch(getDialogue({ productId: productId }));\n  }, [dispatch, productId, selectedDialogueId, isUserLogin]);\n\n  useEffect(() => {\n    if (!selectedDialogueId) {\n      return;\n    }\n    dispatch(clearDialogue());\n    dispatch(getDialogue({ dialogueId: selectedDialogueId }));\n  }, [dispatch, selectedDialogueId, isNewMassege]);\n\n  useEffect(() => {\n    if (!dialogues || dialogues.length === 0) {\n      return;\n    } else {\n      const dialogueId = dialogues._id;\n      const newMessageArray = dialogues.newMessages;\n      const userId = user._id;\n      const isUserNewMessage = newMessageArray.filter(\n        messageObj => messageObj.userReceiver === userId\n      );\n      if (!isUserNewMessage || isUserNewMessage.length === 0) {\n        return;\n      } else {\n        const deleteNewMessageCallback = () => {\n          dispatch(\n            deleteDialogueNewMessage({\n              dialogueId: dialogueId,\n              arrayNewMessage: isUserNewMessage,\n            })\n          );\n        };\n\n        const timer = setTimeout(deleteNewMessageCallback, 5000);\n        return () => {\n          clearTimeout(timer);\n          deleteNewMessageCallback();\n        };\n      }\n    }\n  }, [dispatch, dialogues, user._id]);\n\n  let dialogueArray = [];\n  let newMessageArray = [];\n  if (dialogues.length === 0) {\n    dialogueArray = [];\n    newMessageArray = [];\n  } else {\n    dialogueArray = dialogues.messageArray.slice().reverse();\n    newMessageArray = dialogues.newMessages;\n  }\n\n  const findAvatar = id => {\n    let myAvatar = '';\n    let otherAvatar = '';\n    const firstAvatar = dialogues.userAvatar;\n    const secondAvatar = dialogues.productOwnerAvatar;\n    if (user.userAvatar === firstAvatar) {\n      myAvatar = firstAvatar;\n      otherAvatar = secondAvatar;\n    } else {\n      myAvatar = secondAvatar;\n      otherAvatar = firstAvatar;\n    }\n    if (id === user._id) {\n      return myAvatar;\n    } else {\n      return otherAvatar;\n    }\n  };\n\n  const handleQuestionChange = e => {\n    setMyQuestion(e.target.value);\n  };\n\n  const handleButtonClick = async isUserLogin => {\n    if (isUserLogin) {\n      await dispatch(\n        createDialogue({\n          text: myQuestion,\n          productId: productId,\n          productOwner: productOwner,\n          dialogueId: dialogues._id,\n        })\n      );\n      setMyQuestion('');\n    } else {\n      navigate('/login');\n      return;\n    }\n  };\n\n  const isMessageNew = (text, date) => {\n    if (!newMessageArray || newMessageArray.length === 0) {\n      return false;\n    }\n    const userId = user._id;\n    const isNewMessageArray = newMessageArray.filter(\n      messageObj =>\n        messageObj.userReceiver === userId &&\n        messageObj.message === text &&\n        messageObj.date === date\n    );\n\n    if (isNewMessageArray.length === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <div className={s.dialogueContainer}>\n      <div className={s.additionalOpts}>\n        <BiMessageDetail className={s.favoriteIcon} />\n        <Text text=\"Поставити запитання\" textClass=\"productText\" />\n      </div>\n      {dialogueArray.length === 0 && (\n        <div className={s.avatar}>\n          <Avatar avatarClass=\"photoDialogueLeft\" src={userAvatar} />\n        </div>\n      )}\n      {dialogueArray.length > 0 && (\n        <ul className={s.dialogueGroup}>\n          {dialogueArray.map((dialogue, index) => (\n            <li key={index}>\n              <div className={s.dialogueBox}>\n                {dialogue.textOwner === user._id ? (\n                  <>\n                    <Avatar\n                      avatarClass=\"photoDialogueLeft\"\n                      src={findAvatar(dialogue.textOwner)}\n                    />\n                    <div className={s.dialogueMessage}>\n                      <Text\n                        text={dialogue.text}\n                        textClass={\n                          isMessageNew(dialogue.text, dialogue.date)\n                            ? 'productTextDialogueNewMessage'\n                            : 'productTextDialogue'\n                        }\n                      />\n                      <div className={s.textDate}>\n                        <Text\n                          text={dialogue.date}\n                          textClass=\"productTextDate\"\n                        />\n                      </div>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <div className={s.dialogueMessageRight}>\n                      <Text\n                        text={dialogue.text}\n                        textClass={\n                          isMessageNew(dialogue.text, dialogue.date)\n                            ? 'productTextDialogueNewMessage'\n                            : 'productTextDialogue'\n                        }\n                      />\n                      <div className={s.textDate}>\n                        <Text\n                          text={dialogue.date}\n                          textClass=\"productTextDate\"\n                        />\n                      </div>\n                    </div>\n                    <Avatar\n                      avatarClass=\"photoDialogueRight\"\n                      src={findAvatar(dialogue.textOwner)}\n                    />\n                  </>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n      <div className={s.textInputArea}>\n        <textarea\n          className={s.textarea}\n          name=\"myQuestion\"\n          value={myQuestion}\n          onChange={handleQuestionChange}\n          rows={5}\n          cols={40}\n        />\n        <div className={s.questionButton}>\n          <Button\n            text={isUserLogin ? 'Надіслати' : 'Авторизуйтеся'}\n            btnClass=\"btnLight\"\n            handleClick={() => handleButtonClick(isUserLogin)}\n          />\n\n          {!isUserLogin && (\n            <Text\n              text=\"*Щоб написати продавцю, увійдіть в обліковий запис або зареєструйтеся\"\n              textClass=\"messageTextBtn\"\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogue;\n","// extracted by mini-css-extract-plugin\nexport default {\"photoAvatar\":\"Avatar_photoAvatar__y+tns\",\"photo\":\"Avatar_photo__VHgBi\",\"photoDialogue\":\"Avatar_photoDialogue__Aae+I\",\"photoDialogueLeft\":\"Avatar_photoDialogueLeft__UOJtl\",\"photoDialogueRight\":\"Avatar_photoDialogueRight__C5CPU\"};","import PropTypes from 'prop-types';\nimport avatar from '../../../images/Avatar/avatar.svg';\nimport s from './Avatar.module.scss';\n\nconst Avatar = ({ src, alt, avatarClass, width, heigth, ...attrs }) => {\n  return src ? (\n    <img\n      src={src}\n      alt={alt}\n      className={s[avatarClass]}\n      width={width}\n      height={heigth}\n      {...attrs}\n    />\n  ) : (\n    <img src={avatar} alt=\"Avatar\" className={s[avatarClass]} />\n  );\n};\n\nAvatar.propTypes = {\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  alt: PropTypes.string,\n  avatarClass: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nAvatar.defaultProps = {\n  alt: 'avatar',\n  avatarClass: '',\n  width: 72,\n  height: 72,\n};\n\nexport default Avatar;\n","// extracted by mini-css-extract-plugin\nexport default {\"messageWindow\":\"MessageWindow_messageWindow__uRdd8\",\"dismissButton\":\"MessageWindow_dismissButton__SLD4U\",\"boo\":\"MessageWindow_boo__YcpDh\",\"floating\":\"MessageWindow_floating__2J-P3\",\"face\":\"MessageWindow_face__YrZvM\",\"shadow\":\"MessageWindow_shadow__dHQj9\",\"floatingShadow\":\"MessageWindow_floatingShadow__rQPEA\",\"confirmButtons\":\"MessageWindow_confirmButtons__sF71C\",\"ButtonsBlock\":\"MessageWindow_ButtonsBlock__+USC0\",\"btnYes\":\"MessageWindow_btnYes__-yYz3\",\"btnNo\":\"MessageWindow_btnNo__lIEXL\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearProductMessage } from 'redux/product/product-slice';\nimport { clearUserMessage } from 'redux/auth/auth-slice';\nimport { clearVerifyMessage } from 'redux/verifyEmail/verifyEmail-slice';\nimport { clearDialogueMessage } from 'redux/dialogue/dialogue-slice';\n\nimport Text from 'components/Shared/Text/Text';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport s from './MessageWindow.module.scss';\n\nexport default function MessageWindow({\n  text,\n  onDismiss,\n  confirmButtons,\n  onConfirm,\n}) {\n  const dispatch = useDispatch();\n  const [isDisplayed, setIsDisplayed] = useState(true);\n\n  const handleDismissClick = () => {\n    setIsDisplayed(false);\n    if (typeof onDismiss === 'function') {\n      onDismiss();\n    }\n    dispatch(clearDialogueMessage());\n    dispatch(clearProductMessage());\n    dispatch(clearUserMessage());\n    dispatch(clearVerifyMessage());\n  };\n\n  useEffect(() => {\n    setIsDisplayed(true);\n\n    if (!confirmButtons) {\n      const timeout = setTimeout(() => {\n        setIsDisplayed(false);\n        dispatch(clearDialogueMessage());\n        dispatch(clearProductMessage());\n        dispatch(clearUserMessage());\n        dispatch(clearVerifyMessage());\n      }, 5000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [text, dispatch, confirmButtons]);\n\n  if (!isDisplayed) {\n    return null;\n  }\n\n  const handleConfirmClick = choice => {\n    setIsDisplayed(false);\n    if (typeof onConfirm === 'function') {\n      onConfirm(choice);\n    }\n  };\n\n  return (\n    <div className={s.messageWindow}>\n      {!confirmButtons && (\n        <button className={s.dismissButton} onClick={handleDismissClick}>\n          <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n        </button>\n      )}\n      <div className={s.boo}>\n        <div className={s.face} id=\"face\"></div>\n      </div>\n      <div className={s.shadow}></div>\n      {confirmButtons ? (\n        <div className={s.confirmButtons}>\n          <Text text={text} textClass=\"textMessageBtn\" />\n          <div className={s.ButtonsBlock}>\n            <button\n              className={s.btnYes}\n              onClick={() => handleConfirmClick('yes')}\n            >\n              Так\n            </button>\n            <button\n              className={s.btnNo}\n              onClick={() => handleConfirmClick('no')}\n            >\n              Ні\n            </button>\n          </div>\n        </div>\n      ) : (\n        <Text text={text} textClass=\"textMessage\" />\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"roundButton\":\"RoundButton_roundButton__nMjVe\",\"scrollButton\":\"RoundButton_scrollButton__WegW6\",\"icon\":\"RoundButton_icon__X5lVR\",\"iconMob\":\"RoundButton_iconMob__1fMf0\",\"roundButtonMob\":\"RoundButton_roundButtonMob__M4hXA\"};","import s from 'components/Shared/RoundButton/RoundButton.module.scss';\n\nconst RoundButton = ({ icon: Icon, btnClass, handleClick, id, onClick }) => {\n  const handleButtonClick = e => {\n    if (handleClick) {\n      handleClick(id);\n    }\n    if (onClick) {\n      onClick(e);\n    }\n  };\n\n  const buttonClassName = btnClass ? btnClass : 'roundButton';\n  const iconClassName = btnClass === 'roundButtonMob' ? 'iconMob' : 'icon';\n\n  return (\n    <div className={s[buttonClassName]} onClick={handleButtonClick}>\n      <Icon className={s[iconClassName]} />\n    </div>\n  );\n};\n\nexport default RoundButton;\n","export function translateParamsToEN(category, subcategory) {\n  let categoryName = '';\n  let subCategoryName = '';\n\n  switch (category) {\n    case 'Жінкам':\n      categoryName = 'women';\n      break;\n    case 'Чоловікам':\n      categoryName = 'men';\n      break;\n    case 'Дитячі товари':\n      categoryName = 'children';\n      break;\n    case \"Краса та здоров'я\":\n      categoryName = 'beauty&health';\n      break;\n    default:\n      categoryName = category;\n      break;\n  }\n\n  if (category === 'Чоловікам') {\n    switch (subcategory) {\n      case 'Верхній одяг':\n        subCategoryName = 'outerwear';\n        break;\n      case 'Піджаки і костюми':\n        subCategoryName = 'jackets & suits';\n        break;\n      case 'Кофти та светри':\n        subCategoryName = 'coats & tops';\n        break;\n      case 'Сорочки та теніски':\n        subCategoryName = 'shirts & t-shirts';\n        break;\n      case 'Футболки та майки':\n        subCategoryName = 't-shirts & tank tops';\n        break;\n      case 'Нижня білизна':\n        subCategoryName = 'underwear';\n        break;\n      case 'Взуття':\n        subCategoryName = 'shoes';\n        break;\n      case 'Аксесуари':\n        subCategoryName = 'accessories';\n        break;\n      case 'Спортивний одяг':\n        subCategoryName = 'sportswear';\n        break;\n      case 'Одяг для дому та сну':\n        subCategoryName = 'clothing for home and sleep';\n        break;\n      case 'Спецодяг':\n        subCategoryName = 'special clothing';\n        break;\n      case 'Тактичний одяг':\n        subCategoryName = 'tactical clothing';\n        break;\n      case 'Штани та шорти':\n        subCategoryName = 'pants and shorts';\n        break;\n      default:\n        subCategoryName = subcategory;\n        break;\n    }\n  }\n  if (category === 'Жінкам') {\n    switch (subcategory) {\n      case 'Верхній одяг':\n        subCategoryName = 'outerwear';\n        break;\n      case 'Плаття':\n        subCategoryName = 'dresses';\n        break;\n      case 'Спідниці':\n        subCategoryName = 'skirts';\n        break;\n      case 'Майки і футболки':\n        subCategoryName = 't-shirts and t-shirts';\n        break;\n      case 'Сорочки та блузи':\n        subCategoryName = 'shirts and blouses';\n        break;\n      case 'Coats':\n        subCategoryName = 'Светри';\n        break;\n      case 'Нижня білизна':\n        subCategoryName = 'underwear';\n        break;\n      case 'Аксесуари':\n        subCategoryName = 'accessories';\n        break;\n      case 'Інші речі':\n        subCategoryName = 'other things';\n        break;\n      case 'Спортивний одяг':\n        subCategoryName = 'sportswear';\n        break;\n      case 'Костюми':\n        subCategoryName = 'suits';\n        break;\n      case 'Комбінезони':\n        subCategoryName = 'overalls';\n        break;\n      case 'Одяг для дому та сну':\n        subCategoryName = 'clothes for home and sleep';\n        break;\n      case 'Спецодяг':\n        subCategoryName = 'special clothes';\n        break;\n      case 'Для вагітних':\n        subCategoryName = 'for pregnant women';\n        break;\n      case 'Взуття':\n        subCategoryName = 'shoes';\n        break;\n      case 'Штани та шорти':\n        subCategoryName = 'pants and shorts';\n        break;\n      default:\n        subCategoryName = subcategory;\n        break;\n    }\n  }\n\n  if (category === 'Дитячі товари') {\n    switch (subcategory) {\n      case 'Дитяча кімната':\n        subCategoryName = \"children's room\";\n        break;\n      case 'Товари для мам':\n        subCategoryName = 'products for mothers';\n        break;\n      case 'Харчування і годування':\n        subCategoryName = 'food and feeding';\n        break;\n      case 'Щоденний догляд':\n        subCategoryName = 'daily care';\n        break;\n      case 'Коляски та автокрісла':\n        subCategoryName = 'strollers and car seats';\n        break;\n      case 'Дитячі іграшки':\n        subCategoryName = \"children's toys\";\n        break;\n      case 'Дитячий транспорт':\n        subCategoryName = \"children's transport\";\n        break;\n      case 'Товари для творчості':\n        subCategoryName = 'products for creativity';\n        break;\n      case 'Активний відпочинок':\n        subCategoryName = 'active recreation';\n        break;\n      default:\n        subCategoryName = subcategory;\n        break;\n    }\n  }\n\n  if (category === \"Краса та здоров'я\") {\n    switch (subcategory) {\n      case 'Чоловіча косметика':\n        subCategoryName = \"men's cosmetics\";\n        break;\n      case 'Аксесуари для краси':\n        subCategoryName = 'beauty accessories';\n        break;\n      case 'Декоративна косметика':\n        subCategoryName = 'decorative cosmetics';\n        break;\n      case 'Парфуми':\n        subCategoryName = 'perfume';\n        break;\n      case 'Манікюр і педикюр':\n        subCategoryName = 'manicure and pedicure';\n        break;\n      case 'Косметика для волосся':\n        subCategoryName = 'hair cosmetics';\n        break;\n      case 'Косметика для обличчя':\n        subCategoryName = 'face cosmetics';\n        break;\n      case 'Тіло і ванна':\n        subCategoryName = 'body and bath';\n        break;\n      case 'Догляд за собою':\n        subCategoryName = 'self-care';\n        break;\n      case 'Техніка для краси':\n        subCategoryName = 'techniques for beauty';\n        break;\n      case 'Подарункові набори':\n        subCategoryName = 'gift sets';\n        break;\n      case 'Дезінфікуючи засоби':\n        subCategoryName = 'disinfectants';\n        break;\n      case 'Медичні прилади':\n        subCategoryName = 'medical devices';\n        break;\n      case 'Домашня аптека':\n        subCategoryName = 'home pharmacy';\n        break;\n      case 'Оптика':\n        subCategoryName = 'optics';\n        break;\n      default:\n        subCategoryName = subcategory;\n        break;\n    }\n  }\n  return { categoryName, subCategoryName };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogueList\":\"DialogueList_dialogueList__v+adW\",\"btnSelect\":\"DialogueList_btnSelect__NbDWo\",\"wrapper\":\"DialogueList_wrapper__gclAw\",\"active\":\"DialogueList_active__i3UCk\",\"dialogueGroup\":\"DialogueList_dialogueGroup__qkiVH\",\"dialogueCardBotoom\":\"DialogueList_dialogueCardBotoom__UvjJi\",\"dialogueCard\":\"DialogueList_dialogueCard__bODOd\",\"dialogueName\":\"DialogueList_dialogueName__-i6yR\",\"imageCard\":\"DialogueList_imageCard__rEU8T\",\"deleteBox\":\"DialogueList_deleteBox__6JIMP\",\"message_title_box\":\"DialogueList_message_title_box__sizp5\",\"messageBoxTitle\":\"DialogueList_messageBoxTitle__YodHY\",\"messageBox\":\"DialogueList_messageBox__v4lN+\",\"messageBoxText\":\"DialogueList_messageBoxText__AELys\",\"numberNewMessage\":\"DialogueList_numberNewMessage__yXPlx\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  getAllDialoguesData,\n  deleteDialogue,\n} from 'redux/dialogue/dialogue-operations';\nimport {\n  getDialoguesArrayStore,\n  getDialogueMessage,\n} from 'redux/dialogue/dialogue-selectors';\nimport { getUser } from 'redux/auth/auth-selectors';\n\nimport Avatar from 'components/Profile/Avatar/Avatar';\nimport Text from 'components/Shared/Text/Text';\nimport Button from 'components/Shared/Button';\nimport RoundButton from 'components/Shared/RoundButton/RoundButton';\nimport MessageWindow from 'components/Shared/MessageWindow/MessageWindow';\nimport { BsTrash } from 'react-icons/bs';\n\nimport s from './DialogueList.module.scss';\n\nconst DialogueList = ({ selectedDialogue, setSelectedDialogue }) => {\n  const dispatch = useDispatch();\n  const [statusDialogue, setStatusDialogue] = useState(true);\n  const [isMessage, setIsMessage] = useState('');\n  const [dialogueId, setDialogueId] = useState(null);\n  const [questionWindow, setQuestionWindow] = useState(false);\n  const user = useSelector(getUser);\n  const [isNewMassege, setIsNewMassege] = useState(null);\n  const dialoguesArray = useSelector(getDialoguesArrayStore);\n  const message = useSelector(getDialogueMessage);\n  const isTabletOrMobile = useMediaQuery({ maxWidth: 1279 });\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  console.log('dialoguesArray', dialoguesArray);\n  \n  const onActive = async data => {\n    if (data) {\n      setStatusDialogue(true);\n    } else {\n      setStatusDialogue(false);\n    }\n  };\n\n  useEffect(() => {\n    setIsNewMassege(user.newMessage ? user.newMessage : 0);\n  }, [user.newMessage]);\n\n  useEffect(() => {\n    dispatch(getAllDialoguesData({ statusDialogue }));\n  }, [dispatch, statusDialogue, isNewMassege]);\n\n  useEffect(() => {\n    if (message) {\n      setIsMessage(message);\n      dispatch(getAllDialoguesData({ statusDialogue }));\n    }\n  }, [dispatch, statusDialogue, message]);\n\n  const handleButtonTrashClick = id => {\n    setDialogueId(id);\n    setQuestionWindow(true);\n  };\n\n  const handleConfirm = choice => {\n    if (choice === 'yes') {\n      dispatch(deleteDialogue({ dialogueId: dialogueId }));\n      setQuestionWindow(false);\n    } else if (choice === 'no') {\n      setDialogueId(null);\n      setQuestionWindow(false);\n    }\n  };\n\n  const resetMessage = () => {\n    setIsMessage('');\n  };\n\n  const handleDialogueClick = dialogue => {\n    setSelectedDialogue(dialogue);\n  };\n\n  const getAvatar = ({ otherUserAvatar, productId }) => {\n    const myAvatar = user.userAvatar;\n    const isMyProduct = user.userProducts.includes(productId);\n\n    if (isMyProduct) {\n      return otherUserAvatar;\n    } else {\n      return myAvatar;\n    }\n  };\n\n  const getName = ({ otherUserName, productId }) => {\n    const myName = user.username;\n    const isMyProduct = user.userProducts.includes(productId);\n    if (isMyProduct) {\n      return otherUserName;\n    } else {\n      return myName;\n    }\n  };\n\n  const getNumberNewMessage = dialogue => {\n    const newMessageArray = dialogue.newMessages;\n    const hasMatchingObject = newMessageArray.filter(obj => {\n      return obj.userReceiver === user._id;\n    });\n    if (hasMatchingObject.length === 0) {\n      return 0;\n    } else {\n      return hasMatchingObject.length;\n    }\n  };\n\n  return (\n    <section className={s.dialogueList}>\n      <div className={s.box}>\n        <Text\n          text={'Ваш список діалогів'}\n          textClass={isTabletOrMobile ? 'titleTabMob' : 'title'}\n        />\n        {isTabletOrMobile && (\n          <Text\n            text={'Виберіть діалог щоб побачити повідомлення'}\n            textClass=\"productLabelsDialog\"\n          />\n        )}\n        <div className={s.btnSelect}>\n          <div className={s.wrapper}>\n            <Button\n              text=\"Активні\"\n              type=\"button\"\n              handleClick={() => onActive(true)}\n              btnClass={\n                statusDialogue ? 'exitHeaderBtnDialogue' : 'exitHeaderBtn'\n              }\n            />\n          </div>\n          <div className={s.wrapper}>\n            <Button\n              text=\"Архівні\"\n              type=\"button\"\n              handleClick={() => onActive(false)}\n              btnClass=\"exitHeaderBtn\"\n            />\n          </div>\n        </div>\n        {dialoguesArray.length > 0 && (\n          <ul className={s.dialogueGroup}>\n            {dialoguesArray.map(dialogue => (\n              <li\n                key={dialogue._id}\n                className={s.dialogueCardBotoom}\n                onClick={() => handleDialogueClick(dialogue)}\n              >\n                <div className={s.dialogueCard}>\n                  <div className={s.dialogueName}>\n                    <Avatar\n                      avatarClass=\"photoDialogue\"\n                      src={getAvatar({\n                        otherUserAvatar: dialogue.otherUserInfo.userAvatar,\n                        productId: dialogue.productId,\n                      })}\n                    />\n                    <Text\n                      text={getName({\n                        otherUserName: dialogue.otherUserInfo.username,\n                        productId: dialogue.productId,\n                      })}\n                      textClass=\"after-title-bottom\"\n                    />\n                  </div>\n                  {!isMobile && (\n                    <div\n                      className={s.imageCard}\n                      style={{\n                        backgroundImage: `url(${dialogue.productInfo.mainPhotoUrl})`,\n                      }}\n                    ></div>\n                  )}\n                  <div className={s.message_title_box}>\n                    <div className={s.messageBoxTitle}>\n                      <Text\n                        text={dialogue.productInfo.nameProduct}\n                        textClass=\"after-title-message-title\"\n                      />\n                    </div>\n                    <div className={s.messageBox}>\n                      <div className={s.messageBoxText}>\n                        <Text\n                          text={\n                            dialogue.messageArray[\n                              dialogue.messageArray.length - 1\n                            ].text\n                          }\n                          textClass=\"after-title\"\n                        />\n                      </div>\n                      <Text\n                        text={\n                          dialogue.messageArray[\n                            dialogue.messageArray.length - 1\n                          ].date\n                        }\n                        textClass=\"productTextDate\"\n                      />\n                    </div>\n                  </div>\n                  <div className={s.deleteBox}>\n                    <div className={s.numberNewMessage}>\n                      <Text\n                        text={getNumberNewMessage(dialogue)}\n                        textClass=\"after-title-message-count\"\n                      />\n                    </div>\n                    <RoundButton\n                      btnClass={isMobile ? 'roundButtonMob' : 'roundButton'}\n                      icon={BsTrash}\n                      handleClick={handleButtonTrashClick}\n                      id={dialogue._id}\n                    />\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n        {dialoguesArray.length === 0 && (\n          <Text\n            text={'У вас не має діалогів'}\n            textClass=\"after-title-text-warning\"\n          />\n        )}\n      </div>\n      {questionWindow && (\n        <MessageWindow\n          text=\"Ви впевнені, що хочете видалити діалог?\"\n          confirmButtons={true}\n          onConfirm={handleConfirm}\n        />\n      )}\n      {isMessage && (\n        <MessageWindow text={`${isMessage}`} onDismiss={resetMessage} />\n      )}\n    </section>\n  );\n};\n\nexport default DialogueList;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogueDetail\":\"DialogueDetail_dialogueDetail__2NKC-\",\"box\":\"DialogueDetail_box__NJYRM\",\"groupProductDialogue\":\"DialogueDetail_groupProductDialogue__u43IF\",\"dialogueBox\":\"DialogueDetail_dialogueBox__MJ4xp\",\"productBox\":\"DialogueDetail_productBox__i4MYW\",\"imageCard\":\"DialogueDetail_imageCard__sV9nc\",\"productInfo\":\"DialogueDetail_productInfo__WJar2\",\"messageBoxTitle\":\"DialogueDetail_messageBoxTitle__ot1qY\",\"productNavigate\":\"DialogueDetail_productNavigate__sLv+u\"};","import { useNavigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\nimport { translateParamsToEN } from '../../../funcs&hooks/translateParamsToEN';\nimport Dialogue from 'components/Dialogue/Dialogue';\nimport Text from 'components/Shared/Text/Text';\nimport Button from 'components/Shared/Button';\n\nimport s from './DialogueDetail.module.scss';\n\nconst DialogueDetail = ({ selectedDialogue }) => {\n  const navigate = useNavigate();\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  let _id = null;\n  let owner = null;\n  let userDialogue = null;\n  let category = null;\n  let subcategory = null;\n\n  if (selectedDialogue) {\n    _id = selectedDialogue.productId;\n    owner = selectedDialogue.productOwner;\n    userDialogue = selectedDialogue._id;\n    category = selectedDialogue.productInfo.section;\n    subcategory = selectedDialogue.productInfo.category;\n  }\n\n  const handleButtonClick = () => {\n    const params = translateParamsToEN(category, subcategory);\n    const { categoryName, subCategoryName } = params;\n    const path = `/products/${categoryName}/${subCategoryName}/${_id}`;\n    navigate(path);\n  };\n\n  return (\n    <section className={s.dialogueDetail}>\n      <div\n        className={s.box}\n        style={{ justifyContent: !userDialogue ? 'center' : 'initial' }}\n      >\n        {!userDialogue && isDesktop && (\n          <Text\n            text={'Виберіть діалог щоб побачити повідомлення'}\n            textClass={isDesktop ? 'productLabels' : 'productLabelsNone'}\n          />\n        )}\n        {userDialogue && (\n          <div className={s.groupProductDialogue}>\n            <div className={s.productBox}>\n              {!isMobile && (\n                <div\n                  className={s.imageCard}\n                  style={{\n                    backgroundImage: `url(${selectedDialogue.productInfo.mainPhotoUrl})`,\n                  }}\n                ></div>\n              )}\n              <div className={s.productInfo}>\n                <div className={s.messageBoxTitle}>\n                  <Text\n                    text={selectedDialogue.productInfo.nameProduct}\n                    textClass=\"after-title-message-title\"\n                  />\n                </div>\n                <div>\n                  <Text\n                    text={`ціна: ${selectedDialogue.productInfo.price} грн.`}\n                    textClass=\"after-title\"\n                  />\n                </div>\n              </div>\n              <div className={s.productNavigate}>\n                <Button\n                  text=\"До товару\"\n                  btnClass=\"btnLight\"\n                  handleClick={handleButtonClick}\n                />\n              </div>\n            </div>\n            <div className={s.dialogueBox}>\n              <Dialogue productInfo={{ _id, owner, userDialogue }} />\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default DialogueDetail;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Message_section__OmvT6\",\"dialogueGroup\":\"Message_dialogueGroup__I6vbP\",\"containerDialogueDetailDesktop\":\"Message_containerDialogueDetailDesktop__GEF1I\",\"containerDialogueDetailTabMob\":\"Message_containerDialogueDetailTabMob__vVWZ-\",\"dismissButton\":\"Message_dismissButton__Ubvw9\",\"buttonBoxPosition\":\"Message_buttonBoxPosition__dem4n\",\"closeButton\":\"Message_closeButton__b-6Ej\"};","import { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Container from 'components/Shared/Container';\nimport DialogueList from './DialogueList/DialogueList';\nimport DialogueDetail from './DialogueDetail/DialogueDetail';\nimport { FiX } from 'react-icons/fi';\n\nimport s from './Message.module.scss';\n\nconst Message = () => {\n  const [selectedDialogue, setSelectedDialogue] = useState(null);\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  const handleClose = () => {\n    setSelectedDialogue(null);\n  };\n\n  return (\n    <section className={s.section}>\n      <Container>\n        <div className={s.dialogueGroup}>\n          <DialogueList\n            selectedDialogue={selectedDialogue}\n            setSelectedDialogue={setSelectedDialogue}\n          />\n\n          {isDesktop && (\n            <div className={s.containerDialogueDetailDesktop}>\n              <DialogueDetail\n                selectedDialogue={selectedDialogue}\n                setSelectedDialogue={setSelectedDialogue}\n              />\n            </div>\n          )}\n          {!isDesktop && selectedDialogue !== null && (\n            <div className={s.containerDialogueDetailTabMob}>\n              <Container>\n                <div className={s.buttonBoxPosition}>\n                  <div className={s.buttonBox}>\n                    <button className={s.closeButton} onClick={handleClose}>\n                      <FiX />\n                    </button>\n                  </div>\n                </div>\n                <DialogueDetail\n                  selectedDialogue={selectedDialogue}\n                  setSelectedDialogue={setSelectedDialogue}\n                />\n              </Container>\n            </div>\n          )}\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Message;\n","import Message from 'components/Message/Message';\n\nconst MessagePage = () => {\n  return (\n    <>\n      <Message />\n    </>\n  );\n};\n\nexport default MessagePage;\n"],"names":["productInfo","dispatch","useDispatch","navigate","useNavigate","productId","_id","productOwner","owner","selectedDialogueId","userDialogue","userAvatar","useSelector","getUserAvatar","user","getUser","isUserLogin","getLogin","useState","myQuestion","setMyQuestion","isNewMassege","setIsNewMassege","dialogues","getDialogueStore","useEffect","newMessage","clearDialogue","getDialogue","dialogueId","length","newMessageArray","newMessages","userId","isUserNewMessage","filter","messageObj","userReceiver","deleteNewMessageCallback","deleteDialogueNewMessage","arrayNewMessage","timer","setTimeout","clearTimeout","dialogueArray","messageArray","slice","reverse","findAvatar","id","myAvatar","otherAvatar","firstAvatar","secondAvatar","productOwnerAvatar","handleButtonClick","createDialogue","text","isMessageNew","date","message","className","s","Text","textClass","Avatar","avatarClass","src","map","dialogue","index","textOwner","name","value","onChange","e","target","rows","cols","Button","btnClass","handleClick","alt","width","heigth","attrs","height","avatar","defaultProps","MessageWindow","onDismiss","confirmButtons","onConfirm","isDisplayed","setIsDisplayed","timeout","clearDialogueMessage","clearProductMessage","clearUserMessage","clearVerifyMessage","handleConfirmClick","choice","onClick","icon","faTimes","size","Icon","buttonClassName","iconClassName","translateParamsToEN","category","subcategory","categoryName","subCategoryName","selectedDialogue","setSelectedDialogue","statusDialogue","setStatusDialogue","isMessage","setIsMessage","setDialogueId","questionWindow","setQuestionWindow","dialoguesArray","getDialoguesArrayStore","getDialogueMessage","isTabletOrMobile","useMediaQuery","maxWidth","isMobile","console","log","onActive","data","getAllDialoguesData","handleButtonTrashClick","getAvatar","otherUserAvatar","userProducts","includes","getName","otherUserName","myName","username","getNumberNewMessage","hasMatchingObject","obj","type","handleDialogueClick","otherUserInfo","style","backgroundImage","mainPhotoUrl","nameProduct","RoundButton","BsTrash","deleteDialogue","isDesktop","minWidth","section","justifyContent","price","params","path","Dialogue","Container"],"sourceRoot":""}