{"version":3,"file":"static/js/311.530ec17b.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Profile/MyPurchases/MyPurchases.module.scss?94f3","components/Profile/MyPurchases/MyPurchases.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ordersWrapper\":\"MyPurchases_ordersWrapper__vsq4G\",\"ordersList\":\"MyPurchases_ordersList__tC2k7\",\"orderItem\":\"MyPurchases_orderItem__vBofq\",\"orderInfoWrapper\":\"MyPurchases_orderInfoWrapper__UfCyV\",\"orderInfoItem\":\"MyPurchases_orderInfoItem__-VdP8\",\"orderSum\":\"MyPurchases_orderSum__ERXLf\",\"orderBottomWrapper\":\"MyPurchases_orderBottomWrapper__AikN3\",\"waitingPhrase\":\"MyPurchases_waitingPhrase__NhpV9\",\"btnLight\":\"MyPurchases_btnLight__gkeiQ\",\"message\":\"MyPurchases_message__5UQb3\",\"buttonBottomWrapper\":\"MyPurchases_buttonBottomWrapper__OcJ9F\",\"buttonTrashWrapper\":\"MyPurchases_buttonTrashWrapper__76AmC\",\"messageWindow\":\"MyPurchases_messageWindow__nkmsi\",\"dismissButton\":\"MyPurchases_dismissButton__iVsdD\"};","import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserOrders } from 'redux/order/order-operations';\nimport {\n  getLoadingOrders,\n  selectUserOrders,\n  selectUserOrdersTotalPages,\n} from 'redux/order/order-selectors';\nimport { getID, getLogin } from 'redux/auth/auth-selectors';\nimport { selectUserReviews } from 'redux/review/review-selectors';\nimport { getUserReviews } from 'redux/review/review-operations';\n\nimport OrderProductsList from 'components/Shared/OrderProductsList/OrderProductsList';\nimport Pagination from 'components/Shared/Pagination/Pagination';\nimport OrderStatusList from 'components/Shared/OrderStatusList/OrderStatusList';\nimport Button from 'components/Shared/Button/Button';\nimport FeedbackWindow from 'components/Shared/FeedbackWindow/FeedbackWindow';\nimport Dialogue from 'components/Dialogue/Dialogue';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport s from './MyPurchases.module.scss';\n\nconst MyShoppings = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(getID);\n  const isLogin = useSelector(getLogin);\n  const isLoading = useSelector(getLoadingOrders);\n  const myReview = useSelector(selectUserReviews);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentSelector, setcurrentSelector] = useState('all');\n  const [isFeedbackWindowOpen, setIsFeedbackWindowOpen] = useState(false);\n  const [orderToFeedbackWindow, setOrderToFeedbackWindow] = useState({});\n  const [isMessage, setIsMessage] = useState(false);\n  const [productId, setProductId] = useState(null);\n  const [sellerId, setSellerId] = useState(null);\n\n  useEffect(() => {\n    dispatch(getUserReviews({ userId }));\n  }, [dispatch, userId, orderToFeedbackWindow]);\n\n  useEffect(() => {\n    dispatch(\n      getUserOrders({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [dispatch, currentPage, currentSelector]);\n\n  const userOrders = useSelector(selectUserOrders);\n  const totalPages = useSelector(selectUserOrdersTotalPages);\n\n  // for pagination\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleButtonClick = optionName => {\n    setcurrentSelector(optionName);\n    setCurrentPage(1);\n  };\n\n  const toggleIsOpen = (orderId, sellerId, productInfo, customerId) => {\n    if (orderId) {\n      setOrderToFeedbackWindow({ orderId, sellerId, productInfo, customerId });\n      setIsFeedbackWindowOpen(!isFeedbackWindowOpen);\n      return;\n    }\n    setOrderToFeedbackWindow({});\n    setIsFeedbackWindowOpen(!isFeedbackWindowOpen);\n  };\n\n  useEffect(() => {\n    document.body.style.overflow = isFeedbackWindowOpen ? 'hidden' : 'unset';\n  }, [isFeedbackWindowOpen]);\n\n  const handleMessageClick = (product, seller) => {\n    setIsMessage(true);\n    setProductId(product);\n    setSellerId(seller);\n  };\n\n  const handleDismissClick = () => {\n    setIsMessage(false);\n    setProductId(null);\n    setSellerId(null);\n  };\n\n  return (\n    <>\n      <div className={s.ordersWrapper}>\n        <OrderStatusList\n          currentSelector={currentSelector}\n          handleButtonClick={handleButtonClick}\n        />\n        {userOrders.length > 0 && (\n          <ul className={s.ordersList}>\n            {userOrders.map(\n              ({\n                _id,\n                sellerName,\n                orderSum,\n                orderDate,\n                orderNumber,\n                products,\n                productInfo,\n                delivery,\n                statusNew,\n                confirmed,\n                sellerId,\n                client,\n              }) => {\n                const isBtnRewiewShown = myReview.find(\n                  ({ orderId }) => orderId === _id\n                );\n                return (\n                  <li className={s.orderItem} key={_id}>\n                    <div className={s.orderInfoWrapper}>\n                      <div className={s.orderInfoItem}>\n                        <p>Продавець:</p>\n                        <p>{sellerName}</p>\n                      </div>\n                      <div className={s.orderInfoItem}>\n                        <p>Замовлення &#8470; {orderNumber}</p>\n                        <p>{orderDate}</p>\n                      </div>\n                    </div>\n                    <OrderProductsList\n                      productsForOrder={productInfo}\n                      products={products}\n                    />\n                    <div className={s.orderBottomWrapper}>\n                      {delivery !== '' && statusNew === true && (\n                        <p className={s.waitingPhrase}>Очікує підтвердження</p>\n                      )}\n                      {delivery === '' && statusNew === true && (\n                        <NavLink\n                          to={isLogin ? '/checkout' : '/login'}\n                          className={s.btnLight}\n                          state={{ orderId: _id }}\n                        >\n                          Оформити замовлення\n                        </NavLink>\n                      )}\n                      {statusNew === false && (\n                        <p className={s.waitingPhrase}>\n                          {confirmed === true ? 'Підтверджено' : 'Скасовано'}\n                        </p>\n                      )}\n\n                      <p\n                        className={s.orderSum}\n                      >{`Сума замовлення: ${orderSum} грн.`}</p>\n                    </div>\n                    <div className={s.buttonBottomWrapper}>\n                      <Button\n                        type=\"button\"\n                        btnClass=\"btnLight\"\n                        text=\"Питання продавцю\"\n                        handleClick={() =>\n                          handleMessageClick(products[0]._id, sellerId)\n                        }\n                      />\n                      {!isBtnRewiewShown && (\n                        <Button\n                          btnClass=\"btnLight\"\n                          text=\"Залишити відгук\"\n                          handleClick={() =>\n                            toggleIsOpen(\n                              _id,\n                              sellerId,\n                              productInfo,\n                              client.customerId\n                            )\n                          }\n                        />\n                      )}\n                    </div>\n                    {isFeedbackWindowOpen && (\n                      <FeedbackWindow\n                        hideWindow={toggleIsOpen}\n                        orderToFeedbackWindow={orderToFeedbackWindow}\n                        feedbackType={'asCustomer'}\n                      />\n                    )}\n                  </li>\n                );\n              }\n            )}\n          </ul>\n        )}\n        {!isLoading && userOrders.length === 0 && (\n          <p className={s.message}>Замовлень з таким статусом у вас ще немає</p>\n        )}\n      </div>\n      {totalPages > 1 && (\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n      {isMessage && (\n        <div className={s.messageWindow}>\n          <button className={s.dismissButton} onClick={handleDismissClick}>\n            <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n          </button>\n          <Dialogue\n            productInfo={{\n              _id: productId,\n              owner: userId,\n              seller: sellerId,\n            }}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MyShoppings;\n"],"names":["dispatch","useDispatch","userId","useSelector","getID","isLogin","getLogin","isLoading","getLoadingOrders","myReview","selectUserReviews","useState","currentPage","setCurrentPage","currentSelector","setcurrentSelector","isFeedbackWindowOpen","setIsFeedbackWindowOpen","orderToFeedbackWindow","setOrderToFeedbackWindow","isMessage","setIsMessage","productId","setProductId","sellerId","setSellerId","useEffect","getUserReviews","getUserOrders","page","selectorName","window","scrollTo","top","behavior","userOrders","selectUserOrders","totalPages","selectUserOrdersTotalPages","toggleIsOpen","orderId","productInfo","customerId","document","body","style","overflow","className","s","OrderStatusList","handleButtonClick","optionName","length","map","_id","sellerName","orderSum","orderDate","orderNumber","products","delivery","statusNew","confirmed","client","isBtnRewiewShown","find","OrderProductsList","productsForOrder","to","state","Button","type","btnClass","text","handleClick","product","seller","FeedbackWindow","hideWindow","feedbackType","Pagination","onPageChange","onClick","icon","faTimes","size","Dialogue","owner"],"sourceRoot":""}