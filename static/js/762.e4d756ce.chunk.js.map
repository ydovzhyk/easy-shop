{"version":3,"file":"static/js/762.e4d756ce.chunk.js","mappings":"uVACA,GAAgB,cAAgB,yCAAyC,YAAc,uCAAuC,YAAc,uCAAuC,UAAY,qCAAqC,aAAe,wCAAwC,YAAc,uCAAuC,YAAc,uCAAuC,SAAW,qC,SCkIhZ,EAnH0B,WAAO,IAAD,IACxBA,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAC9B,GAAwCC,EAAAA,EAAAA,UAASL,GAAjD,eAAOM,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,sEAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,sBAE9C,GAEIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,MAAOjB,KAJHkB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAQXC,EAAQ,mCAAG,WAAOC,EAAMC,GAAb,uEACfA,EAAEC,iBACIC,EAAcH,EAAKJ,QAAUX,EAAee,EAAKJ,MAAQX,EAC/DR,GAAS2B,EAAAA,EAAAA,IAAeD,IACxB1B,GAAS4B,EAAAA,EAAAA,GAAYF,IACrBf,EAAW,0FALI,2CAAH,wDAad,OACE,UAACkB,EAAA,EAAD,YACE,iBAAKC,UAAWC,EAAAA,cAAhB,WACE,SAACC,EAAA,EAAD,CACEC,KAAM,gMACNC,UAAU,qBAEZ,SAACF,EAAA,EAAD,CAAMC,KAAM,sGAAuBC,UAAU,sBAC7C,SAACF,EAAA,EAAD,CACEC,KACE,qmBAEFC,UAAU,qBAEZ,SAACF,EAAA,EAAD,CACEC,KACE,kVAEFC,UAAU,sBAEZ,SAACF,EAAA,EAAD,CAAMC,KAAM,wEAAkBC,UAAU,sBACxC,iBAAKJ,UAAWC,EAAAA,YAAhB,WACE,SAACC,EAAA,EAAD,CACEC,KACE,8cAEFC,UAAU,qBAEZ,SAACF,EAAA,EAAD,CACEC,KACE,yTAEFC,UAAU,wBAGd,SAACF,EAAA,EAAD,CACEC,KACE,4WAEFC,UAAU,qBAEZ,gBAAKJ,UAAWC,EAAAA,YAAhB,UACE,iBAAMD,UAAWC,EAAAA,KAAQT,SAAUD,EAAaC,GAAhD,UACE,iBAAKQ,UAAWC,EAAAA,UAAhB,WACE,SAACC,EAAA,EAAD,CACEC,KAAM,6TACNC,UAAU,qBAEZ,iBAAKJ,UAAWC,EAAAA,aAAhB,WACE,SAAC,KAAD,CACEX,QAASA,EACTe,KAAK,QACLC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,0BACET,UAAWC,EAAAA,YACXS,KAAK,OACLD,MAAOA,EACPnB,QAASA,EACTkB,SAAU,SAACd,GACTc,EAASd,GA/DL,SAACA,GACzBf,EAAgBe,EAAEiB,OAAOF,MAC1B,CA8DqBG,CAAkBlB,EACnB,GACGa,EAAAA,EAAAA,OAVA,KAcV,gBAAKP,UAAWC,EAAAA,YAAhB,UACE,SAACY,EAAA,EAAD,CAAQV,KAAMvB,EAASkC,SAAS,0BAO1C,gBAAKd,UAAWC,EAAAA,YAAhB,UACE,UAAC,KAAD,CAAMc,GAAI/B,EAAcgB,UAAWC,EAAAA,SAAnC,WACE,SAAC,MAAD,IADF,yCAKH1B,IAAa,SAACyC,EAAA,EAAD,CAAeb,KAAM5B,MAGxC,C","sources":["webpack://easy-shop/./src/components/Profile/EmailVerification/EmailVerification.module.scss?df8c","components/Profile/EmailVerification/EmailVerification.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"verifyWrapper\":\"EmailVerification_verifyWrapper__r3x-K\",\"textWrapper\":\"EmailVerification_textWrapper__-CeYa\",\"formWrapper\":\"EmailVerification_formWrapper__uuAL+\",\"partFrame\":\"EmailVerification_partFrame__qG03k\",\"phoneWrapper\":\"EmailVerification_phoneWrapper__KzY9n\",\"changeInput\":\"EmailVerification_changeInput__H3ZcU\",\"buttonFrame\":\"EmailVerification_buttonFrame__8HvUC\",\"btnLight\":\"EmailVerification_btnLight__VS0DV\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { getVerifyEmail } from 'redux/verifyEmail/verifyEmail-selectors';\nimport { setVerifyEmail } from 'redux/verifyEmail/verifyEmail-slice';\nimport { field } from 'components/Shared/TextField/fields';\nimport { verifyEmail } from 'redux/verifyEmail/verifyEmail-operations';\nimport { getVerifyMessage } from 'redux/verifyEmail/verifyEmail-selectors';\nimport MessageWindow from 'components/Shared/MessageWindow/MessageWindow';\nimport Container from 'components/Shared/Container';\nimport Text from 'components/Shared/Text/Text';\nimport Button from 'components/Shared/Button';\nimport s from 'components/Profile/EmailVerification/EmailVerification.module.scss';\n\nconst EmailVerification = () => {\n  const dispatch = useDispatch();\n  const receivedEmail = useSelector(getVerifyEmail);\n  const isMessage = useSelector(getVerifyMessage);\n  const [currentEmail, setCurrentEmail] = useState(receivedEmail);\n  const [btnText, setBtnText] = useState('Підтвердити');\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/profile/mysettings';\n\n  const { control, handleSubmit,\n    // reset\n  } = useForm({\n    defaultValues: {\n      email: receivedEmail,\n    },\n  });\n\n  const onSubmit = async (data, e) => {\n    e.preventDefault();\n    const emailToSend = data.email !== currentEmail ? data.email : currentEmail;\n    dispatch(setVerifyEmail(emailToSend));\n    dispatch(verifyEmail(emailToSend));\n    setBtnText('Надіслати ще раз');\n    // reset();\n  };\n\n  const handleEmailChange = (e) => {\n    setCurrentEmail(e.target.value);\n  };\n\n  return (\n    <Container>\n      <div className={s.verifyWrapper}>\n        <Text\n          text={'Підтвердіть свою електронну адресу'}\n          textClass=\"verifyTextTitle\"\n        />\n        <Text text={'Навіщо це потрібно?'} textClass=\"verifyTextmiddle\" />\n        <Text\n          text={\n            \"Підтвердіть свою електронну адресу, щоб отримати доступ до додавання оголошень. Це обов'язкова умова для продажу на EASYshop \"\n          }\n          textClass=\"verifyTextSmall\"\n        />\n        <Text\n          text={\n            'Ваша електронна адреса не буде доступна іншим користувачам на EASYshop'\n          }\n          textClass=\"verifyTextmiddle\"\n        />\n        <Text text={'Як це зробити:'} textClass=\"verifyTextmiddle\" />\n        <div className={s.textWrapper}>\n          <Text\n            text={\n              '1.Натисніть на кнопку \"Підтвердити\". На вашу електронну адресу буде відправлено посилання'\n            }\n            textClass=\"verifyTextSmall\"\n          />\n          <Text\n            text={\n              '2.Перейдіть за посиланням, яке отримали в електронному листі'\n            }\n            textClass=\"verifyTextSmall\"\n          />\n        </div>\n        <Text\n          text={\n            'Важливо! Посилання дійсне протягом 10 хвилин з моменту його формування.'\n          }\n          textClass=\"verifyAttention\"\n        />\n        <div className={s.formWrapper}>\n          <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <div className={s.partFrame}>\n              <Text\n                text={'Ви можете змінити електронну адресу, яку хочете підтвердити'}\n                textClass=\"verifyAttention\"\n              />\n              <div className={s.phoneWrapper}>\n                <Controller\n                  control={control}\n                  name=\"email\"\n                  render={({ field: { onChange, value } }) => (\n                    <input\n                      className={s.changeInput}\n                      type=\"text\"\n                      value={value}\n                      control={control}\n                      onChange={(e) => {\n                        onChange(e);\n                        handleEmailChange(e);\n                      }}\n                      {...field.email}\n                    />\n                  )}\n                />\n                <div className={s.buttonFrame}>\n                  <Button text={btnText} btnClass=\"btnLight\" />\n                </div>\n                \n              </div>\n            </div>\n          </form>\n        </div>\n        <div className={s.buttonFrame}>\n          <Link to={backLinkHref} className={s.btnLight}>\n            <AiOutlineArrowLeft/>\n            Назад</Link> \n        </div>\n      </div>\n      {isMessage && <MessageWindow text={isMessage} />}\n    </Container>\n  );\n};\n\nexport default EmailVerification;\n"],"names":["dispatch","useDispatch","receivedEmail","useSelector","getVerifyEmail","isMessage","getVerifyMessage","useState","currentEmail","setCurrentEmail","btnText","setBtnText","location","useLocation","backLinkHref","state","from","useForm","defaultValues","email","control","handleSubmit","onSubmit","data","e","preventDefault","emailToSend","setVerifyEmail","verifyEmail","Container","className","s","Text","text","textClass","name","render","field","onChange","value","type","target","handleEmailChange","Button","btnClass","to","MessageWindow"],"sourceRoot":""}