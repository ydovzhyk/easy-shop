{"version":3,"file":"static/js/252.dbfe4d90.chunk.js","mappings":"wHAIA,IAJkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,OAAO,gBAAKC,UAAU,YAAf,SAA4BD,GACpC,C,4VCDD,EAAuB,uBAAvB,EAAqD,uBAArD,EAA6H,uBAA7H,EAA0J,sBAA1J,EAA+L,+BAA/L,EAAsO,wBAAtO,EAAyQ,2BAAzQ,EAAiT,6BAAjT,EAA0V,4BAA1V,EAAiY,2B,SC0JjY,EAvIiB,WACf,IAAME,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,iHAESC,MAAMC,EAAAA,GAFf,cAERC,EAFQ,gBAGKA,EAASC,OAHd,OAGRA,EAHQ,QAIRC,EAAS,IAAIC,YACZC,UAAY,WACjBT,EAAcO,EAAOG,OACtB,EACDH,EAAOI,cAAcL,GARP,kDAUdM,QAAQC,IAAI,uBAAZ,MAVc,0DAAH,qDAcfX,GACD,GAAE,IAEH,OAAyCY,EAAAA,EAAAA,IAAQ,CAC/CC,cAAe,CACbC,SAAU,GACVC,MAAO,GACPC,SAAU,MAJNC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAezBC,EACkB,WAAtB5B,EAAS6B,SACL,0FACA,gJAEAC,EAAe,SAAC,GACpB,OADqC,EAAfC,SACP,UAAMC,EAAN,YAAoBA,GAAiBA,CACrD,EAED,IAAKrC,GAAcG,EACjB,OAAO,SAAC,KAAD,CAAUmC,GAAG,WAOtB,OACE,oBAASvC,UAAWsC,EAApB,UACE,UAACE,EAAA,EAAD,YACE,iBAAKxC,UAAWsC,EAAhB,WACE,iBAAKtC,UAAWsC,EAAhB,WACE,SAAC,KAAD,CAAStC,UAAWoC,EAAcG,GAAG,SAASE,KAAG,EAAjD,UACE,eAAIzC,UAAWsC,EAAf,yCAEF,SAAC,KAAD,CAAStC,UAAWoC,EAAcG,GAAG,gBAArC,UACE,eAAIvC,UAAWsC,EAAf,gFAGJ,SAACI,EAAA,EAAD,CAAMC,UAAU,cAAcC,KAAMV,KACpC,eACEW,KAAK,wCACL7C,UAAWsC,EAFb,WAIE,SAAC,MAAD,CAAUQ,KAAM,KAJlB,aAOA,kBAAM9C,UAAWsC,EAAQS,SAAUf,GA5C1B,SAACgB,EAAMC,GACtBA,EAAEC,iBACF,IAAMC,GAAc,kBAAQH,GAAR,IAAcrC,WAAYA,IAC9CH,GAAS4C,EAAAA,EAAAA,IAASD,IAClBlB,GACD,IAuCO,WACE,SAAC,KAAD,CACEF,QAASA,EACTsB,KAAK,WACLC,MAAO,CAAEC,UAAU,EAAMC,UAAW,IACpCC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,SAACC,EAAA,GAAD,QACED,MAAOA,EACP7B,QAASA,EACT+B,aAAcH,GACVD,EAAAA,EAAAA,MALA,KASV,SAAC,KAAD,CACE3B,QAASA,EACTsB,KAAK,QACLC,MAAO,CACLC,UAAU,GAEZE,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,SAACC,EAAA,GAAD,QACED,MAAOA,EACP7B,QAASA,EACT+B,aAAcH,GACVD,EAAAA,EAAAA,OALA,KASV,SAAC,KAAD,CACE3B,QAASA,EACTsB,KAAK,WACLC,MAAO,CAAEC,UAAU,EAAMQ,UAAW,EAAGP,UAAW,IAClDC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,MAAtB,OACN,SAACC,EAAA,GAAD,QACED,MAAOA,EACP7B,QAASA,EACT+B,aAAcH,GACVD,EAAAA,EAAAA,UALA,KASV,gBAAK1D,UAAWsC,EAAhB,UACE,SAAC0B,EAAA,EAAD,CAAQpB,KAAK,+DAAaqB,SAAS,mBAGvC,SAAC,KAAD,CAAMjE,UAAWsC,EAAYC,GAAG,IAAhC,2IAIDtC,IACC,SAACiE,EAAA,EAAD,CAActB,KAAI,UAAK3C,GAAckE,UA3E1B,WACjB3D,GAAS4D,EAAAA,EAAAA,MACV,QA8EF,EC/ID,EARqB,WACnB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/Shared/Container/Container.jsx","webpack://easy-shop/./src/components/Register/Register.module.scss?7a6d","components/Register/Register.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["const Container = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__aX9qD\",\"wrap\":\"Register_wrap__rHFtG\",\"imgDesktop\":\"Register_imgDesktop__elIqv\",\"auth\":\"Register_auth__SzPrF\",\"box\":\"Register_box__aeZU6\",\"linksWrapper\":\"Register_linksWrapper__+tmLD\",\"title\":\"Register_title__flBV1\",\"authLink\":\"Register_authLink__teNO8\",\"activeLink\":\"Register_activeLink__2h5SP\",\"googleBtn\":\"Register_googleBtn__6TJOg\",\"linkHome\":\"Register_linkHome__aYJl8\"};","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { register } from 'redux/auth/auth-opetations';\nimport { NavLink, Navigate, useLocation, Link } from 'react-router-dom';\nimport { FcGoogle } from 'react-icons/fc';\nimport { getError, getNewUserId } from 'redux/auth/auth-selectors';\nimport { clearError } from 'redux/auth/auth-slice';\n\nimport { field } from 'components/Shared/TextField/fields';\nimport TextField from 'components/Shared/TextField';\nimport Button from 'components/Shared/Button';\nimport Container from 'components/Shared/Container';\nimport ErrorMessage from 'components/Shared/ErrorMessage/ErrorMessage';\nimport Text from 'components/Shared/Text/Text';\n\nimport avatarImage from '../../images/Avatar/avatar.svg';\n\nimport s from './Register.module.scss';\n\nconst Register = () => {\n  const errorLogin = useSelector(getError);\n  const newUserId = useSelector(getNewUserId);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const [userAvatar, setUserAvatar] = useState('');\n\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        const response = await fetch(avatarImage);\n        const blob = await response.blob();\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          setUserAvatar(reader.result);\n        };\n        reader.readAsDataURL(blob);\n      } catch (error) {\n        console.log('Error loading image:', error);\n      }\n    };\n\n    loadImage();\n  }, []);\n\n  const { control, handleSubmit, reset } = useForm({\n    defaultValues: {\n      username: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    const dataWithAvatar = { ...data, userAvatar: userAvatar };\n    dispatch(register(dataWithAvatar));\n    reset();\n  };\n\n  const googleText =\n    location.pathname === '/login'\n      ? 'Увійти швидко з Google'\n      : 'Зареєструватись швидко з Google';\n\n  const getClassName = ({ isActive }) => {\n    return isActive ? `${s.authLink} ${s.activeLink}` : s.authLink;\n  };\n\n  if (!errorLogin && newUserId) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  const resetError = () => {\n    dispatch(clearError());\n  };\n\n  return (\n    <section className={s.auth}>\n      <Container>\n        <div className={s.box}>\n          <div className={s.linksWrapper}>\n            <NavLink className={getClassName} to=\"/login\" end>\n              <h2 className={s.title}>Вхід</h2>\n            </NavLink>\n            <NavLink className={getClassName} to=\"/registration\">\n              <h2 className={s.title}>Реєстрація</h2>\n            </NavLink>\n          </div>\n          <Text textClass=\"google-text\" text={googleText} />\n          <a\n            href=\"https://ydovzhyk.github.io/easy-shop/\"\n            className={s.googleBtn}\n          >\n            <FcGoogle size={24} />\n            Google\n          </a>\n          <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <Controller\n              control={control}\n              name=\"username\"\n              rules={{ required: true, maxLength: 16 }}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  {...field.user}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"email\"\n              rules={{\n                required: true,\n              }}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  {...field.email}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"password\"\n              rules={{ required: true, minLength: 8, maxLength: 30 }}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  value={value}\n                  control={control}\n                  handleChange={onChange}\n                  {...field.password}\n                />\n              )}\n            />\n            <div className={s.wrap}>\n              <Button text=\"Реєстрація\" btnClass=\"btnLight\" />\n            </div>\n          </form>\n          <Link className={s.linkHome} to=\"/\">\n            Повернутися на головну\n          </Link>\n        </div>\n        {errorLogin && (\n          <ErrorMessage text={`${errorLogin}`} onDismiss={resetError} />\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Register;\n","import Register from 'components/Register';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <Register />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["children","className","errorLogin","useSelector","getError","newUserId","getNewUserId","location","useLocation","dispatch","useDispatch","useState","userAvatar","setUserAvatar","useEffect","loadImage","fetch","avatarImage","response","blob","reader","FileReader","onloadend","result","readAsDataURL","console","log","useForm","defaultValues","username","email","password","control","handleSubmit","reset","googleText","pathname","getClassName","isActive","s","to","Container","end","Text","textClass","text","href","size","onSubmit","data","e","preventDefault","dataWithAvatar","register","name","rules","required","maxLength","render","field","onChange","value","TextField","handleChange","minLength","Button","btnClass","ErrorMessage","onDismiss","clearError"],"sourceRoot":""}