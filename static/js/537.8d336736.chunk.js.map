{"version":3,"file":"static/js/537.8d336736.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Profile/MySales/MySales.module.scss?fad3","components/Profile/MySales/MySales.jsx","webpack://easy-shop/./src/components/Shared/OrderStatusList/OrderStatusList.module.scss?5552","components/Shared/OrderStatusList/OrderStatusList.jsx","webpack://easy-shop/./src/components/Shared/Pagination/Pagination.module.scss?dfd1","components/Shared/Pagination/Pagination.jsx","webpack://easy-shop/./src/components/Shared/RoundButton/RoundButton.module.scss?06ef","components/Shared/RoundButton/RoundButton.jsx","funcs&hooks/updateUser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ordersWrapper\":\"MySales_ordersWrapper__zezf+\",\"ordersList\":\"MySales_ordersList__s6tus\",\"orderItem\":\"MySales_orderItem__l-5wO\",\"orderInfoWrapper\":\"MySales_orderInfoWrapper__rgdFU\",\"orderInfoItem\":\"MySales_orderInfoItem__zGXXl\",\"orderSum\":\"MySales_orderSum__MPLUJ\",\"orderBottomWrapper\":\"MySales_orderBottomWrapper__P6Du2\",\"waitingPhrase\":\"MySales_waitingPhrase__o59Sm\",\"message\":\"MySales_message__x8quZ\",\"buttonTrashWrapper\":\"MySales_buttonTrashWrapper__Pmv-o\"};","import { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getUserSales,\n  updateOrderStatus,\n  deleteOrderById,\n} from 'redux/order/order-operations';\nimport {\n  getLoadingOrders,\n  selectUserSales,\n  selectUserSalesTotalPages,\n} from 'redux/order/order-selectors';\nimport { orderConfirmationDialogue } from 'redux/dialogue/dialogue-operations';\n\nimport OrderProductsList from 'components/Shared/OrderProductsList/OrderProductsList';\nimport Pagination from 'components/Shared/Pagination/Pagination';\nimport Button from 'components/Shared/Button/Button';\nimport OrderStatusList from 'components/Shared/OrderStatusList/OrderStatusList';\nimport RoundButton from 'components/Shared/RoundButton/RoundButton';\nimport { BsTrash } from 'react-icons/bs';\nimport { updateUserFunc } from 'funcs&hooks/updateUser';\nimport s from './MySales.module.scss';\n\nconst MySales = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getLoadingOrders);\n  const userSales = useSelector(selectUserSales);\n  const totalPages = useSelector(selectUserSalesTotalPages);\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentSelector, setcurrentSelector] = useState('all');\n\n  useEffect(() => {\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [dispatch, currentPage, currentSelector]);\n\n  // for pagination\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleButtonClick = optionName => {\n    setcurrentSelector(optionName);\n    setCurrentPage(1);\n  };\n\n  const handleConfirmButtonClick = id => {\n    console.log('handleConfirmButtonClick');\n    dispatch(\n      updateOrderStatus({ orderId: id, confirmed: true, statusNew: false })\n    );\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    dispatch(\n      orderConfirmationDialogue({\n        orderId: id,\n        typeDialogue: 'sales',\n      })\n    );\n  };\n  const handleCancelButtonClick = id => {\n    console.log('handleCancelButtonClick');\n    dispatch(\n      updateOrderStatus({ orderId: id, confirmed: false, statusNew: false })\n    );\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    dispatch(\n      orderConfirmationDialogue({\n        orderId: id,\n        typeDialogue: 'cancel',\n      })\n    );\n  };\n\n  const handleButtonTrashClick = async id => {\n    await dispatch(deleteOrderById(id));\n    dispatch(\n      getUserSales({\n        page: currentPage,\n        selectorName: currentSelector,\n      })\n    );\n    updateUserFunc(dispatch);\n  };\n\n  return (\n    <>\n      <div className={s.ordersWrapper}>\n        <OrderStatusList\n          currentSelector={currentSelector}\n          handleButtonClick={handleButtonClick}\n        />\n        {userSales.length > 0 && (\n          <ul className={s.ordersList}>\n            {userSales.map(\n              ({\n                _id,\n                orderSum,\n                orderDate,\n                orderNumber,\n                products,\n                productInfo,\n                client,\n                statusNew,\n                confirmed,\n              }) => (\n                <li className={s.orderItem} key={_id}>\n                  <div className={s.orderInfoWrapper}>\n                    <div className={s.orderInfoItem}>\n                      <p>Покупець:</p>\n                      <p>\n                        {client.customerSecondName} {client.customerFirstName}\n                      </p>\n                      <p>Номер телефону: {client.customerTel}</p>\n                    </div>\n                    <div className={s.orderInfoItem}>\n                      <p>Замовлення &#8470; {orderNumber}</p>\n                      <p>{orderDate}</p>\n                    </div>\n                  </div>\n                  <OrderProductsList\n                    productsForOrder={productInfo}\n                    products={products}\n                  />\n                  <div className={s.orderBottomWrapper}>\n                    {statusNew === true ? (\n                      <>\n                        <Button\n                          type=\"button\"\n                          btnClass=\"btnLight\"\n                          text=\"Підтвердити замовлення\"\n                          handleClick={() => handleConfirmButtonClick(_id)}\n                        />\n                        <Button\n                          type=\"button\"\n                          btnClass=\"btnDark\"\n                          text=\"Скасувати замовлення\"\n                          handleClick={() => handleCancelButtonClick(_id)}\n                        />\n                      </>\n                    ) : (\n                      <p className={s.waitingPhrase}>\n                        {confirmed === true ? 'Підтверджено' : 'Скасовано'}\n                      </p>\n                    )}\n\n                    <p\n                      className={s.orderSum}\n                    >{`Сума замовлення: ${orderSum} грн.`}</p>\n                  </div>\n                  <div className={s.buttonTrashWrapper}>\n                    <RoundButton\n                      btnClass={isMobile ? 'roundButtonMob' : 'roundButton'}\n                      icon={BsTrash}\n                      handleClick={handleButtonTrashClick}\n                      id={_id}\n                    />\n                  </div>\n                </li>\n              )\n            )}\n          </ul>\n        )}\n        {!isLoading && userSales.length === 0 && (\n          <p className={s.message}>Замовлень з таким статусом у вас ще немає</p>\n        )}\n      </div>\n      {totalPages > 1 && (\n        <Pagination\n          totalPages={totalPages}\n          currentPage={currentPage}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MySales;\n","// extracted by mini-css-extract-plugin\nexport default {\"listBox\":\"OrderStatusList_listBox__YmcUi\",\"heading\":\"OrderStatusList_heading__zRkCM\",\"optionsList\":\"OrderStatusList_optionsList__G76gp\",\"selectButton\":\"OrderStatusList_selectButton__vMhds\",\"active\":\"OrderStatusList_active__Jcgt3\"};","import Select from 'react-select';\nimport { useMediaQuery } from 'react-responsive';\nimport s from './OrderStatusList.module.scss';\n\nconst OrderStatusList = ({ currentSelector, handleButtonClick }) => {\n    const isTablet = useMediaQuery({ minWidth: 768 });\n  return (\n    <div className={s.listBox}>\n      <p className={s.heading}>За статусом</p>\n      {!isTablet && (\n        <Select\n          classNamePrefix=\"custom-select\"\n          onChange={value => handleButtonClick(value.value)}\n          options={[\n            { value: 'all', label: 'Всі' },\n            { value: 'new', label: 'Нові' },\n            { value: 'confirmed', label: 'Підтверджені' },\n            { value: 'canceled', label: 'Відхилені' },\n          ]}\n          defaultValue={{ value: 'all', label: 'Всі' }}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n            // colors: {\n            //   ...theme.colors,\n            //   primary25: '#fbef35;',\n            //   primary: '#3b3b3b',\n            // },\n          })}\n        />\n      )}\n\n      {isTablet && (\n        <ul className={s.optionsList}>\n          <li>\n            <button\n              className={\n                currentSelector === 'all'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('all')}\n            >\n              Всі\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'new'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('new')}\n            >\n              Нові\n            </button>\n          </li>\n          <li>\n            <button\n              className={\n                currentSelector === 'confirmed'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('confirmed')}\n            >\n              Підтверджені\n            </button>\n          </li>\n          {/* <li>Виконані</li> */}\n          <li>\n            <button\n              className={\n                currentSelector === 'canceled'\n                  ? `${s.selectButton} ${s.active}`\n                  : s.selectButton\n              }\n              onClick={() => handleButtonClick('canceled')}\n            >\n              Відхилені\n            </button>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default OrderStatusList;\n","// extracted by mini-css-extract-plugin\nexport default {\"paginationSection\":\"Pagination_paginationSection__1F1CP\",\"pagesSet\":\"Pagination_pagesSet__2tGzL\",\"pageBox\":\"Pagination_pageBox__Ti6uC\",\"active\":\"Pagination_active__yaPsQ\",\"btnLeft\":\"Pagination_btnLeft__Gnp4s\",\"btnRight\":\"Pagination_btnRight__O85qW\"};","import React from 'react';\n\nimport s from './Pagination.module.scss';\n\nconst Pagination = ({ totalPages, currentPage, onPageChange }) => {\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const displayRange = 2; // Кількість сторінок, які відображаються навколо поточної сторінки\n\n    let startPage = Math.max(1, currentPage - displayRange);\n    let endPage = Math.min(totalPages, currentPage + displayRange);\n\n    if (currentPage <= displayRange) {\n      endPage = Math.min(displayRange * 2 + 1, totalPages);\n    }\n\n    if (currentPage >= totalPages - displayRange) {\n      startPage = Math.max(totalPages - displayRange * 2, 1);\n    }\n\n    for (let page = startPage; page <= endPage; page++) {\n      pageNumbers.push(page);\n    }\n\n    return pageNumbers;\n  };\n\n  return (\n    <div className={s.paginationSection}>\n      <button \n        className={`${s.btnLeft} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        &lt;\n      </button>\n      <div className={s.pagesSet}>\n        {getPageNumbers().map(page => (\n          <button\n            key={page}\n            onClick={() => onPageChange(page)}\n            className={currentPage === page ? s.active : s.pageBox}\n          >\n            {page}\n          </button>\n        ))}\n      </div>\n      <button\n        className={`${s.btnRight} ${s.pageBox}`}\n        onClick={() => onPageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"roundButton\":\"RoundButton_roundButton__nMjVe\",\"scrollButton\":\"RoundButton_scrollButton__WegW6\",\"icon\":\"RoundButton_icon__X5lVR\",\"iconMob\":\"RoundButton_iconMob__1fMf0\",\"roundButtonMob\":\"RoundButton_roundButtonMob__M4hXA\"};","import s from 'components/Shared/RoundButton/RoundButton.module.scss';\n\nconst RoundButton = ({ icon: Icon, btnClass, handleClick, id, onClick }) => {\n  const handleButtonClick = e => {\n    if (handleClick) {\n      handleClick(id);\n    }\n    if (onClick) {\n      onClick(e);\n    }\n  };\n\n  const buttonClassName = btnClass ? btnClass : 'roundButton';\n  const iconClassName = btnClass === 'roundButtonMob' ? 'iconMob' : 'icon';\n\n  return (\n    <div className={s[buttonClassName]} onClick={handleButtonClick}>\n      <Icon className={s[iconClassName]} />\n    </div>\n  );\n};\n\nexport default RoundButton;\n","import { updateUser } from 'redux/auth/auth-operations';\n\nexport const updateUserFunc = dispatch => {\n  const authData = JSON.parse(localStorage.getItem('easy-shop.authData'));\n  if (authData && authData.accessToken) {\n    const userData = {\n      accessToken: authData.accessToken,\n      refreshToken: authData.refreshToken,\n      sid: authData.sid,\n    };\n    dispatch(updateUser(userData));\n  }\n};\n"],"names":["dispatch","useDispatch","isLoading","useSelector","getLoadingOrders","userSales","selectUserSales","totalPages","selectUserSalesTotalPages","isMobile","useMediaQuery","maxWidth","useState","currentPage","setCurrentPage","currentSelector","setcurrentSelector","useEffect","getUserSales","page","selectorName","window","scrollTo","top","behavior","handleButtonTrashClick","id","deleteOrderById","updateUserFunc","className","s","OrderStatusList","handleButtonClick","optionName","length","map","_id","orderSum","orderDate","orderNumber","products","productInfo","client","statusNew","confirmed","customerSecondName","customerFirstName","customerTel","OrderProductsList","productsForOrder","Button","type","btnClass","text","handleClick","console","log","updateOrderStatus","orderId","orderConfirmationDialogue","typeDialogue","RoundButton","icon","BsTrash","Pagination","onPageChange","isTablet","minWidth","classNamePrefix","onChange","value","options","label","defaultValue","theme","borderRadius","onClick","disabled","pageNumbers","startPage","Math","max","endPage","min","displayRange","push","getPageNumbers","Icon","buttonClassName","iconClassName","e","authData","JSON","parse","localStorage","getItem","accessToken","userData","refreshToken","sid","updateUser"],"sourceRoot":""}