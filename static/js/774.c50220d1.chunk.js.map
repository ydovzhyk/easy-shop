{"version":3,"file":"static/js/774.c50220d1.chunk.js","mappings":"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","sources":["webpack://easy-shop/./src/components/Profile/Avatar/Avatar.module.scss?696a","components/Profile/Avatar/Avatar.jsx","webpack://easy-shop/./src/components/Profile/ChangePhoto/ChangePhoto.module.scss?3922","components/Profile/ChangePhoto/ChangePhoto.jsx","components/Profile/MySettings/Options.js","webpack://easy-shop/./src/components/Profile/MySettings/MySettings.module.scss?8404","components/Profile/MySettings/MySettings.jsx","components/Profile/UserInfoDetails/ProfileDetails.jsx","components/Profile/Value.jsx","components/Shared/Container/Container.jsx","webpack://easy-shop/./src/components/Shared/FormInputFile/FormInputFile.module.scss?0a4e","components/Shared/FormInputFile/FormInputFile.jsx","webpack://easy-shop/./src/components/Shared/SelectField/SelectField.module.scss?fd33","components/Shared/SelectField/SelectField.jsx","webpack://easy-shop/./src/components/Profile/UserInfoDetails/UserInfoDetails.module.scss?05d3"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photoAvatar\":\"Avatar_photoAvatar__y+tns\",\"photo\":\"Avatar_photo__VHgBi\"};","import PropTypes from 'prop-types';\nimport { CiUser } from \"react-icons/ci\";\nimport s from './Avatar.module.scss';\n\n// import photo from \"../../../images/Avatar/Hansel.png\"\n\nconst Avatar = ({\n    src, alt, avatarClass, width, heigth, ...attrs }) => {\n    return (\n        src ?\n        (<img\n            src={src}\n            alt={alt}\n            className={s[avatarClass]}\n            width={width}\n            height={heigth}\n            {...attrs}\n            />) : (<CiUser className={s[avatarClass]} />)\n    );\n};\n\nAvatar.propTypes = {\n    src: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    alt: PropTypes.string,\n    avatarClass: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n}\n\nAvatar.defaultProps = {\n    alt: 'avatar',\n    avatarClass: '',\n    width: 72,\n    height: 72,\n}\n\nexport default Avatar;","// extracted by mini-css-extract-plugin\nexport default {\"changePhotoWrapper\":\"ChangePhoto_changePhotoWrapper__0zEXF\",\"avatarframe\":\"ChangePhoto_avatarframe__ZAqFK\",\"avatar\":\"ChangePhoto_avatar__Zl7lA\",\"changePhoto\":\"ChangePhoto_changePhoto__wG8dI\"};","import { useState, useEffect } from 'react';\nimport Avatar from 'components/Profile/Avatar/Avatar';\nimport Text from 'components/Shared/Text/Text';\nimport s from './ChangePhoto.module.scss';\nimport FormInputFile from 'components/Shared/FormInputFile/FormInputFile';\n\nconst ChangePhoto = ({\n    register,\n    isFormSubmitted,\n    onChangeAvatar,\n}) => {\n    const [avatar, setAvatar] = useState('');\n    \n    const handleUploadFile =  event => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n            const dataURL = reader.result;\n            setAvatar(dataURL);\n        };\n        reader.readAsDataURL(file);\n    };\n\n    useEffect(() => {\n        onChangeAvatar(avatar);\n    }, [avatar, onChangeAvatar]);\n\n    useEffect(() => {\n        if (isFormSubmitted) {\n        setAvatar('');\n        }\n    }, [isFormSubmitted]);\n    \n    return (\n        <div className={s.changePhotoWrapper}>\n            <div className={s.avatarframe}>\n                <div className={s.avatar}>\n                    <Avatar\n                        src={avatar}\n                        avatarClass=\"photo\"\n                    />\n                </div>\n            </div>\n            <div className={s.changePhoto}>\n                <label>Зміни фото профілю</label>\n                <Text\n                    textClass=\"text\"\n                    text=\"Виберіть квадратне фото не менше 200*200\"\n                />\n                <FormInputFile\n                    register={register}\n                    name=\"avatar\"\n                    multiple={false}\n                    single={true}\n                    label=\"Завантажити\"\n                    accept=\"image/png, image/jpeg\"\n                    onChange={handleUploadFile}\n                />\n                            \n            </div>\n        </div>\n)\n}\n\nexport default ChangePhoto;","const CityNames = [\n  'Баришівка',\n  'Біла Церква',\n  'Бориспіль',\n  'Богуслав',\n  'Боярка',\n  'Бровари',\n  'Буча',\n  'Васильків',\n  'Вінниця',\n  'Вишневе',\n  'Вишгород',\n  'Гайсин',\n  'Городище',\n  'Гребінка',\n  'Дніпро',\n  'Дубно',\n  'Жашків',\n  'Житомир',\n  'Здолбунів',\n  'Іванків',\n  'Ірпінь',\n  'Калинівка',\n  \"Кам'янець-Подільський\",\n  \"Кам'янське\",\n  'Канів',\n  'Київ',\n  'Ковель',\n  'Коломия',\n  'Коростень',\n];\n\nexport { CityNames };\n","// extracted by mini-css-extract-plugin\nexport default {\"mysetwrapper\":\"MySettings_mysetwrapper__BHTR0\",\"avatarframe\":\"MySettings_avatarframe__1W+eb\",\"title\":\"MySettings_title__kfoBK\",\"partwrapper\":\"MySettings_partwrapper__MqeVB\",\"form\":\"MySettings_form__AfKLm\",\"partFrame\":\"MySettings_partFrame__lTA+n\",\"navButton\":\"MySettings_navButton__0hbYH\",\"aboutChangeProfile\":\"MySettings_aboutChangeProfile__EwPNC\",\"buttonFrame\":\"MySettings_buttonFrame__VGinq\"};","import { useSelector, useDispatch } from 'react-redux';\n// import { getID } from 'redux/auth/auth-selectors';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useState } from 'react';\nimport { updateUserSettings } from 'redux/auth/auth-opetations';\nimport { field } from 'components/Shared/TextField/fields';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport Container from 'components/Shared/Container';\nimport ChangePhoto from '../ChangePhoto/ChangePhoto';\nimport Text from 'components/Shared/Text/Text';\nimport Button from 'components/Shared/Button';\nimport TextField from 'components/Shared/TextField/TextField';\nimport SelectField from 'components/Shared/SelectField/SelectField';\nimport ProfileDetails from '../UserInfoDetails/ProfileDetails';\nimport { CityNames } from './Options';\n\n\nimport s from './MySettings.module.scss';\n// import { axiosUpdateUserSettings } from 'api/auth';\n\nconst MySettings = () => {\n    const dispatch = useDispatch();\n    // const userId = useSelector(getID);\n    const user = useSelector(getUser);\n    const email = user.email;\n    const [avatarFileURL, setAvatarFileURL] = useState('');\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n    const handleChangeAvatar = url => {\n    setAvatarFileURL(url);\n    };\n    \n    const { control, register, handleSubmit,\n        // reset\n    } = useForm({\n        defaultValues: {\n            secondName: '',\n            firstName: '',\n            surName: '',\n            email,\n            tel: '',\n            cityName: 'Київ',\n            streetName: '',\n            houseNamber: '',\n            sex: '',\n            about: ''\n    },\n  });\n\n    const onSubmit = async (data, e) => {\n        e.preventDefault();\n        const dataForUpload = {\n            secondName: data.secondName,\n            firstName: data.firstName,\n            surName: data.surName,\n            email: data.email,\n            tel: data.tel,\n            userAvatar: avatarFileURL,\n            // owner: userId,\n            cityName: data.cityName,\n            streetName: data.streetName,\n            houseNamber: data.houseNamber,\n            sex: data.sex,\n            about: data.about\n        };\n        dispatch(updateUserSettings(dataForUpload));\n        // setAvatarFileURL('');\n        setIsFormSubmitted(true);\n    }\n\n    \n    return (\n        <Container >\n            <section className={s.mysetwrapper}>\n                <Text textClass=\"title\"\n                text=\"Мої Налаштування\"/> \n                <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n                    <ChangePhoto\n                        register={register}\n                        isFormSubmitted={isFormSubmitted}\n                        onChangeAvatar={handleChangeAvatar} />\n                    <div className={s.partwrapper}>\n                        <div className={s.partFrame}>\n                            <Text text={'Прізвище'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"secondName\"\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, value } }) => (\n                                    <TextField\n                                        className=\"changeProfile\"\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.secondName}\n                                    />\n                                )}\n                            />\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Ім\\'я'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"firstName\"\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, value } }) => (\n                                    <TextField\n                                        className=\"changeProfile\"\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.firstName}\n                                    />\n                                )}\n                            />\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'По батькові'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"surName\"\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, value } }) => (\n                                    <TextField\n                                        className=\"changeProfile\"\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.surName}\n                                    />\n                                )}\n                            />\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Email*'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"email\"\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, value } }) => (\n                                    <TextField\n                                        className=\"changeProfile\"\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.email}\n                                    />\n                                )}\n                            />\n                            <Text\n                                text={'Не додавайте email на mail.ru, mail.ua, yandex.ru, list.ru, inbox.ru, bk.ru, vk.ru, ok.ru'}\n                                textClass=\"second-text\"/>\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Телефон'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"tel\"\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, value } }) => (\n                                    <TextField\n                                        className=\"changeProfile\"\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.tel}\n                                    />\n                                )}\n                            />\n                            <div className={s.navButton}>\n                                <ProfileDetails\n                                    to={\"/phone-verification\"}\n                                >Змінити</ProfileDetails>                                \n                            </div>\n                            \n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Місто'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"cityName\"\n                                render={({ field: { onChange, value } }) => (\n                                    <SelectField\n                                        value={value}\n                                        handleChange={onChange}\n                                        className=\"changeProfile\"\n                                        name=\"cityName\"\n                                        {...field.cityName}\n                                        options={CityNames}\n                                    />\n                            )}/>\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Вулиця'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"streetName\"\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, value } }) => (\n                                    <TextField\n                                        className=\"changeProfile\"\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.streetName}\n                                    />\n                                )}\n                            />\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Номер будинку'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"houseNamber\"\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, value } }) => (\n                                    <TextField\n                                        className=\"changeProfile\"\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.houseNamber}\n                                    />\n                                )}\n                            />\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Стать'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"sex\"\n                                render={({ field: { onChange, value } }) => (\n                                    <SelectField\n                                        value={value}\n                                        handleChange={onChange}\n                                        className=\"changeProfile\"\n                                        name=\"sex\"\n                                        {...field.sex}\n                                        options={[\n                                            'Чоловік',\n                                            'Жінка',\n                                            'Інше'\n                                        ]}\n                                    />\n                            )}/>\n                        </div>\n                        <div className={s.partFrame}>\n                            <Text text={'Про себе'} textClass=\"lable-form\" />\n                            <Controller\n                                control={control}\n                                name=\"about\"\n                                render={({ field: { onChange, value } }) => (\n                                    <textarea\n                                        className={s.aboutChangeProfile}\n                                        value={value}\n                                        control={control}\n                                        handleChange={onChange}\n                                        {...field.about}\n                                    />\n                                )}\n                            />\n                        </div>\n                    </div>\n                    <div className={s.buttonFrame}>\n                        <Button text=\"Зберегти\" btnClass=\"btnLight\" />\n                    </div>\n                    \n                </form>\n            </section>\n        </Container>\n        )\n}\n\nexport default MySettings;\n","import PropTypes from 'prop-types';\n\nimport {NavLink} from 'react-router-dom';\nimport Value from '../Value';\nimport s from './UserInfoDetails.module.scss';\n\nconst ProfileDetails = ({ children, to, value, addValue}) => {\n    \n    const getClassName = ({ isActive }) => { \n    return isActive ? `${s.navlink} ${s.active}` : `${s.navlink}`;\n    };\n    \n    \n    return (\n        <NavLink\n            className={getClassName }\n            to={to}\n        >\n            {children}\n            {addValue &&\n                <Value className={s.rightvalue}>{value}</Value>}\n        </NavLink>\n    )\n}\n\nProfileDetails.propTypes = {\n    children: PropTypes.string,\n    to: PropTypes.string,\n    value: PropTypes.number,\n    addValue: PropTypes.bool,\n    navClass: PropTypes.string,\n}\n\nProfileDetails.defaultProps = {\n    children: '',\n    to: '/',\n    value: 0,\n    addValue: false,\n    navClass: '',\n}\nexport default ProfileDetails;","import PropTypes from 'prop-types';\n\nconst Value = ({children, className }) => {\n    return (\n        <span\n            className={className}>\n            {children}\n        </span>\n    )\n}\n\nValue.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.number,\n}\n\nValue.defaultProps = {\n    className: '',\n    children: 0,\n}\n\nexport default Value;","const Container = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"FormInputFile_box__BUrw5\",\"label\":\"FormInputFile_label__9Bdge\"};","import React from 'react';\nimport s from './FormInputFile.module.scss';\n\nexport default function FormInputFile({\n  register,\n  name,\n  multiple,\n  single,\n  label,\n  onChange,\n}) {\n  const handleFileChange = event => {\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return (\n    <div className={s.box}>\n      <label htmlFor={name} className={s.label}>\n        {label}\n      </label>\n      <input\n        type=\"file\"\n        id={name}\n        accept=\"image/png, image/jpeg\"\n        style={{ display: 'none' }}\n        {...register(name)}\n        {...(multiple ? { multiple: true } : {})}\n        {...(single ? { multiple: false } : {})}\n        onChange={handleFileChange}\n      />\n    </div>\n  );\n}\n// import React from 'react';\n// import s from './FormInputFile.module.scss';\n\n// export default function FormInputFile({ register, multiple, single, label }) {\n//   return (\n//     <div className={s.box}>\n//       <label htmlFor=\"imageUpload\" className={s.label}>\n//         {label}\n//       </label>\n//       <input\n//         type=\"file\"\n//         id=\"imageUpload\"\n//         accept=\"image/png, image/jpeg\"\n//         style={{ display: 'none' }}\n//         {...register('files')}\n//         {...(multiple ? { multiple: true } : {})}\n//         {...(single ? { multiple: false } : {})}\n//       />\n//     </div>\n//   );\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__Y87wK\",\"headerLabel\":\"SelectField_headerLabel__4409s\",\"select\":\"SelectField_select__bwshq\",\"headerSelect\":\"SelectField_headerSelect__V-FA+\",\"addProduct\":\"SelectField_addProduct__NX8YD\",\"vip\":\"SelectField_vip__T0M33\"};","import React from 'react';\nimport Select from 'react-select';\nimport s from './SelectField.module.scss';\n\nconst customStyles = {\n  placeholder: provided => ({\n    ...provided,\n    fontSize: '16px',\n    color: 'var(--second-text-color)',\n    pointerEvents: 'none',\n  }),\n};\n\nconst SelectField = ({\n  name,\n  value,\n  handleChange,\n  placeholder,\n  required,\n  options,\n  className,\n}) => {\n  const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n  const selectClass = className ? `${s.select} ${s[className]}` : `${s.select}`;\n\n  return (\n    <label className={labelClass}>\n      <Select\n        classNamePrefix=\"custom-select\"\n        className={selectClass}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        placeholder={placeholder}\n        required={required}\n        options={options.map(option => ({ value: option, label: option }))}\n        styles={customStyles}\n      />\n    </label>\n  );\n};\n\nexport default SelectField;\n","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"UserInfoDetails_active__NgjkL\",\"rightvalue\":\"UserInfoDetails_rightvalue__Y3zbH\",\"list\":\"UserInfoDetails_list__NjrSU\",\"item\":\"UserInfoDetails_item__wdN1B\",\"navlink\":\"UserInfoDetails_navlink__Mn-lu\"};"],"names":["Avatar","src","alt","avatarClass","width","heigth","attrs","className","s","height","defaultProps","register","isFormSubmitted","onChangeAvatar","useState","avatar","setAvatar","useEffect","Text","textClass","text","FormInputFile","name","multiple","single","label","accept","onChange","event","file","target","files","reader","FileReader","onload","dataURL","result","readAsDataURL","CityNames","dispatch","useDispatch","email","useSelector","getUser","avatarFileURL","setAvatarFileURL","setIsFormSubmitted","useForm","defaultValues","secondName","firstName","surName","tel","cityName","streetName","houseNamber","sex","about","control","handleSubmit","onSubmit","data","e","preventDefault","dataForUpload","userAvatar","updateUserSettings","Container","url","rules","required","render","field","value","TextField","handleChange","ProfileDetails","to","SelectField","options","Button","btnClass","children","addValue","isActive","navClass","Value","htmlFor","type","id","style","display","customStyles","placeholder","provided","fontSize","color","pointerEvents","labelClass","selectClass","classNamePrefix","map","option","styles"],"sourceRoot":""}