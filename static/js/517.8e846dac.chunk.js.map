{"version":3,"file":"static/js/517.8e846dac.chunk.js","mappings":"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","sources":["components/Shared/Container/Container.jsx","webpack://easy-shop/./src/components/Shared/OrderProductsList/OrderProductsList.module.scss?4f0f","components/Shared/OrderProductsList/OrderProductsList.jsx","webpack://easy-shop/./src/components/Shared/SelectField/SelectField.module.scss?fd33","components/Shared/SelectField/SelectField.jsx","webpack://easy-shop/./src/components/Checkout/Checkout.module.scss?c504","components/Checkout/FormField.jsx","components/Checkout/Checkout.jsx","pages/CheckoutPage/CheckoutPage.jsx"],"sourcesContent":["const Container = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"productItem\":\"OrderProductsList_productItem__uQkyy\",\"infoWraper\":\"OrderProductsList_infoWraper__q9A2H\",\"mainInfo\":\"OrderProductsList_mainInfo__MnIWV\",\"thumb\":\"OrderProductsList_thumb__oGhpS\",\"mainPhoto\":\"OrderProductsList_mainPhoto__2vOtt\",\"description\":\"OrderProductsList_description__AFr5I\",\"sizeQuantity\":\"OrderProductsList_sizeQuantity__imNh1\",\"sizeQuantityWrapper\":\"OrderProductsList_sizeQuantityWrapper__lx-2f\",\"priceWrapper\":\"OrderProductsList_priceWrapper__cu6Qt\"};","import { Link } from 'react-router-dom';\nimport Text from 'components/Shared/Text/Text';\nimport NoPhoto from 'images/catalog_photo/no_photo.jpg';\nimport s from './OrderProductsList.module.scss';\n\nconst OrderProductsList = ({ productsForOrder, products }) => {\n  // console.log(productsForOrder);\n  return (\n    <ul>\n      {productsForOrder &&\n        productsForOrder.map(\n          ({\n            _id,\n            nameProduct,\n            mainPhotoUrl,\n            brendName,\n            price,\n            size,\n            sale,\n            section,\n            category,\n          }) => {\n            const sizesForProduct =\n              products.find(item => item._id === _id)?.size || size;\n            const transformedSize = sizesForProduct.map(item => item.name);\n            const sizeQuantity = sizesForProduct.map(item => item.quantity);\n            const changedPrice = sale ? (price * (100 - sale)) / 100 : price;\n            const productsPrice =\n              sizeQuantity.reduce(\n                (prevValue, number) => prevValue + number,\n                0\n              ) * changedPrice;\n            return (\n              <li className={s.productItem} key={_id}>\n                <div className={s.infoWraper}>\n                  <div className={s.mainInfo}>\n                    <Link to={`/product/${section}/${category}/${_id}`}>\n                      <div className={s.thumb}>\n                        <img\n                          className={s.mainPhoto}\n                          src={mainPhotoUrl}\n                          onError={e => (e.target.src = NoPhoto)}\n                          alt={nameProduct}\n                        />\n                      </div>\n                    </Link>\n                    <div className={s.description}>\n                      <Text textClass=\"productText\" text={brendName} />\n                      <Link to={`/products/${section}/${category}/${_id}`}>\n                        <Text textClass=\"productHeadings\" text={nameProduct} />\n                      </Link>\n                      <div className={s.sizeQuantity}>\n                        <div className={s.sizeQuantityWrapper}>\n                          {transformedSize.map(size => (\n                            <Text\n                              key={size}\n                              textClass=\"productText\"\n                              text={`Size: ${size}`}\n                            />\n                          ))}\n                        </div>\n                        <div className={s.sizeQuantityWrapper}>\n                          {sizeQuantity.map((quantity, index) => (\n                            <Text\n                              key={index}\n                              textClass=\"productText\"\n                              text={`Кількість: ${quantity}`}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className={s.priceWrapper}>\n                    <Text\n                      textClass=\"productHeadings\"\n                      text={`Сума: ${productsPrice} грн.`}\n                    />\n                  </div>\n                </div>\n              </li>\n            );\n          }\n        )}\n    </ul>\n  );\n};\n\nexport default OrderProductsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SelectField_label__Y87wK\",\"headerLabel\":\"SelectField_headerLabel__4409s\",\"select\":\"SelectField_select__bwshq\",\"headerSelect\":\"SelectField_headerSelect__V-FA+\",\"addProduct\":\"SelectField_addProduct__NX8YD\",\"vip\":\"SelectField_vip__T0M33\",\"changeProfile\":\"SelectField_changeProfile__33cVK\",\"filterSection\":\"SelectField_filterSection__G42Ks\",\"addOrder\":\"SelectField_addOrder__GDM6L\"};","import React from 'react';\nimport { forwardRef } from 'react';\nimport Select from 'react-select';\nimport s from './SelectField.module.scss';\n\nconst customStyles = {\n  placeholder: provided => ({\n    ...provided,\n    fontSize: '16px',\n    color: 'var(--second-text-color)',\n    pointerEvents: 'none',\n  }),\n};\n\nconst SelectField = forwardRef(\n  (\n    {\n      name,\n      value,\n      handleChange,\n      placeholder,\n      required,\n      options,\n      className,\n      defaultValue,\n    },\n    ref\n  ) => {\n    const labelClass = className ? `${s.label} ${s[className]}` : `${s.label}`;\n    const selectClass = className\n      ? `${s.select} ${s[className]}`\n      : `${s.select}`;\n\n    return (\n      <label className={labelClass}>\n        <Select\n          classNamePrefix=\"custom-select\"\n          className={selectClass}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          defaultValue={defaultValue}\n          placeholder={placeholder}\n          required={required}\n          options={options.map(option => ({ value: option, label: option }))}\n          styles={customStyles}\n          ref={ref}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 0,\n          })}\n        />\n      </label>\n    );\n  }\n);\nexport default SelectField;\n","// extracted by mini-css-extract-plugin\nexport default {\"default\":\"Checkout_default__x8sV0\",\"defaultBox\":\"Checkout_defaultBox__MXYrl\",\"formWrapper\":\"Checkout_formWrapper__Mq7aG\",\"orderInfo\":\"Checkout_orderInfo__xjm9d\",\"title\":\"Checkout_title__607ux\",\"formField\":\"Checkout_formField__nW0Yf\",\"inputError\":\"Checkout_inputError__SWaur\",\"sumWrapper\":\"Checkout_sumWrapper__NkCfR\",\"sumTitle\":\"Checkout_sumTitle__1OL+2\",\"sumBox\":\"Checkout_sumBox__FRsJy\"};","import { Controller } from 'react-hook-form';\nimport Text from 'components/Shared/Text/Text';\nimport TextField from 'components/Shared/TextField';\nimport { field } from 'components/Shared/TextField/fields';\nimport s from './Checkout.module.scss';\n\nconst FormField = ({\n  labelText,\n  controllerName,\n  fieldName,\n  control,\n  register,\n}) => {\n  return (\n    <div className={s.formField}>\n      <Text text={labelText} textClass=\"productHeadings\" />\n      <Controller\n        control={control}\n        name={controllerName}\n        rules={{\n          required: true,\n        }}\n        render={({ field: { onChange, value } }) => (\n          <TextField\n            className=\"addOrder\"\n            value={value}\n            control={control}\n            handleChange={onChange}\n            {...field[fieldName]}\n            required={true}\n            {...register(`${controllerName}`, {\n              required: \"Обов'язково до заповнення\",\n              //   pattern: {\n              //     value: /^\\+?3?8?[0-9]{10}/,\n              //     message: 'Приклад номеру : +380993453451',\n              //   },\n            })}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default FormField;","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getLoadingOrders,\n  selectOrderById,\n  selectProductsOrderById,\n} from 'redux/order/order-selectors';\nimport { orderConfirmationDialogue } from 'redux/dialogue/dialogue-operations';\nimport { getOrderById, updateOrder } from 'redux/order/order-operations';\nimport { getUser } from 'redux/auth/auth-selectors';\n\nimport { useForm, Controller } from 'react-hook-form';\nimport Container from 'components/Shared/Container';\nimport Text from 'components/Shared/Text/Text';\nimport { field } from 'components/Shared/TextField/fields';\nimport SelectField from 'components/Shared/SelectField/SelectField';\nimport Button from 'components/Shared/Button/Button';\nimport OrderProductsList from 'components/Shared/OrderProductsList/OrderProductsList';\nimport FormField from './FormField';\nimport s from './Checkout.module.scss';\n\nconst Checkout = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const orderId = location.state?.orderId ?? null;\n\n  useEffect(() => {\n    if (!orderId) {\n      return;\n    }\n    dispatch(getOrderById(orderId));\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [dispatch, orderId]);\n\n  const orderInCheckout = useSelector(selectOrderById);\n  const productsForOrder = useSelector(selectProductsOrderById);\n  const isLoading = useSelector(getLoadingOrders);\n  const user = useSelector(getUser);\n\n  const [deliveryService, setDeliveryService] = useState('');\n\n  const { client, orderSum, sellerName, _id, products, orderNumber } =\n    orderInCheckout;\n  const { secondName, firstName, surName, tel } = user;\n\n  const { control, handleSubmit, register } = useForm({\n    defaultValues: {\n      delivery: '',\n      secondName: secondName ? secondName : '',\n      firstName: firstName ? firstName : '',\n      surName: surName ? surName : '',\n      tel: tel ? tel : '',\n      department: '',\n      city: '',\n    },\n  });\n\n  const onSubmit = async (data, e) => {\n    e.preventDefault();\n    const orderData = {\n      orderId: _id,\n      delivery: `${data.delivery.value}, ${data.city}, ${data.department}`,\n      customerSecondName: data.secondName,\n      customerFirstName: data.firstName,\n      customerSurName: data.surName,\n      customerTel: data.tel,\n      customerId: client.customerId,\n    };\n    const updatedOrder = await dispatch(updateOrder(orderData));\n\n    //// тут код для повідомлень\n    for (const product of productsForOrder) {\n      const { _id, owner } = product;\n      await dispatch(\n        orderConfirmationDialogue({\n          productId: _id,\n          productOwner: owner,\n          typeDialogue: 'checkout',\n        })\n      );\n    }\n\n    if (updatedOrder.payload.code === 200) {\n      navigate('/profile/mypurchases');\n    }\n  };\n  const labelName =\n    deliveryService === 'УкрПошта'\n      ? 'Введіть індекс(номер) відділення*'\n      : 'Введіть номер відділення*';\n\n  return (\n    <Container>\n      <section className={s.default}>\n        <div className={s.defaultBox}>\n          {!isLoading && (\n            <form onSubmit={handleSubmit(onSubmit)} className={s.formWrapper}>\n              <div className={s.orderInfo}>\n                <h2 className={s.title}>\n                  Оформлення замовлення &#8470; {orderNumber}\n                </h2>\n                <Text\n                  textClass=\"productHeadings\"\n                  text={`Продавець: ${sellerName}`}\n                />\n                <Text\n                  textClass=\"title\"\n                  text={`Сума замовлення: ${orderSum} грн.`}\n                />\n                {productsForOrder && products && (\n                  <OrderProductsList\n                    productsForOrder={productsForOrder}\n                    products={products}\n                  />\n                )}\n\n                <div className={s.formField}>\n                  <Text textClass=\"title\" text=\"Спосіб доставки\" />\n                  <Controller\n                    control={control}\n                    name=\"delivery\"\n                    rules={{\n                      required: true,\n                    }}\n                    render={({ field: { onChange, value } }) => (\n                      <SelectField\n                        value={value}\n                        handleChange={selectedValue => {\n                          onChange(selectedValue);\n                          setDeliveryService(selectedValue.value);\n                        }}\n                        className=\"addOrder\"\n                        {...field.delivery}\n                        options={['Нова пошта', 'УкрПошта', 'Meest']}\n                        {...register('delivery', {\n                          required: 'Виберіть службу доставки',\n                        })}\n                      />\n                    )}\n                  />\n                </div>\n                <FormField\n                  labelText=\"Введіть місто*\"\n                  controllerName=\"city\"\n                  fieldName=\"city\"\n                  control={control}\n                  register={register}\n                />\n                <FormField\n                  labelText={labelName}\n                  controllerName=\"department\"\n                  fieldName=\"deliveryDepartment\"\n                  control={control}\n                  register={register}\n                />\n                <div>\n                  <Text textClass=\"title\" text=\"Ваші контактні дані\" />\n                  <FormField\n                    labelText=\"Прізвище*\"\n                    controllerName=\"secondName\"\n                    fieldName=\"secondName\"\n                    control={control}\n                    register={register}\n                  />\n                  <FormField\n                    labelText=\"Ім'я*\"\n                    controllerName=\"firstName\"\n                    fieldName=\"firstName\"\n                    control={control}\n                    register={register}\n                  />\n                  <FormField\n                    labelText=\"По батькові*\"\n                    controllerName=\"surName\"\n                    fieldName=\"surName\"\n                    control={control}\n                    register={register}\n                  />\n                  <FormField\n                    labelText=\"Телефон +380*\"\n                    controllerName=\"tel\"\n                    fieldName=\"tel\"\n                    control={control}\n                    register={register}\n                  />\n                </div>\n              </div>\n              <div className={s.sumWrapper}>\n                <p className={s.sumTitle}>Разом</p>\n                <div className={s.sumBox}>\n                  <Text textClass=\"after-title-bigger\" text=\"Вартість товару\" />\n                  <span>{orderSum}</span>\n                </div>\n                <div className={s.sumBox}>\n                  <Text textClass=\"title\" text=\"До оплати\" />\n                  <Text textClass=\"title\" text={orderSum} />\n                </div>\n                <Button\n                  type=\"submit\"\n                  btnClass=\"btnLight\"\n                  text=\"Оформити\"\n                  handleClick={handleSubmit(onSubmit)}\n                />\n              </div>\n            </form>\n          )}\n        </div>\n      </section>\n    </Container>\n  );\n};\n\nexport default Checkout;\n","import Checkout from 'components/Checkout/Checkout';\n\nconst CheckoutPage = () => {\n  return (\n    <>\n      <Checkout />\n    </>\n  );\n};\n\nexport default CheckoutPage;\n"],"names":["children","className","productsForOrder","products","map","_id","nameProduct","mainPhotoUrl","brendName","price","size","sale","section","category","sizesForProduct","find","item","transformedSize","name","sizeQuantity","quantity","changedPrice","productsPrice","reduce","prevValue","number","s","to","src","onError","e","target","NoPhoto","alt","Text","textClass","text","index","customStyles","placeholder","provided","fontSize","color","pointerEvents","forwardRef","ref","value","handleChange","required","options","defaultValue","labelClass","selectClass","classNamePrefix","onChange","option","label","styles","theme","borderRadius","labelText","controllerName","fieldName","control","register","rules","render","field","TextField","dispatch","useDispatch","navigate","useNavigate","orderId","useLocation","state","useEffect","getOrderById","window","scrollTo","top","behavior","orderInCheckout","useSelector","selectOrderById","selectProductsOrderById","isLoading","getLoadingOrders","user","getUser","useState","deliveryService","setDeliveryService","client","orderSum","sellerName","orderNumber","secondName","firstName","surName","tel","useForm","defaultValues","delivery","department","city","handleSubmit","onSubmit","data","preventDefault","orderData","customerSecondName","customerFirstName","customerSurName","customerTel","customerId","updateOrder","updatedOrder","product","owner","orderConfirmationDialogue","productId","productOwner","typeDialogue","payload","code","labelName","Container","OrderProductsList","SelectField","selectedValue","Button","type","btnClass","handleClick"],"sourceRoot":""}